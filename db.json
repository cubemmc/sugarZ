{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/img/text_align_last.jpg","path":"img/text_align_last.jpg","modified":1,"renderable":0},{"_id":"themes/tomotoes/source/css/style.less","path":"css/style.less","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/img/alipay.png","path":"img/alipay.png","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/img/cc.png","path":"img/cc.png","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/img/default.cur","path":"img/default.cur","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/img/desktop.ini","path":"img/desktop.ini","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/img/img-err.png","path":"img/img-err.png","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/img/img-loading.png","path":"img/img-loading.png","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/img/pointer.cur","path":"img/pointer.cur","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/img/wechat.png","path":"img/wechat.png","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/js/main.min.js","path":"js/main.min.js","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/js/script.min.js","path":"js/script.min.js","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/img/dog.png","path":"img/dog.png","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/js/jquery.js","path":"js/jquery.js","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"source/img/pointer_events_use.jpg","path":"img/pointer_events_use.jpg","modified":1,"renderable":0},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Bold.eot","path":"css/fonts/roboto/Roboto-Bold.eot","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Bold.woff2","path":"css/fonts/roboto/Roboto-Bold.woff2","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Light.eot","path":"css/fonts/roboto/Roboto-Light.eot","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Light.woff","path":"css/fonts/roboto/Roboto-Light.woff","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Medium.eot","path":"css/fonts/roboto/Roboto-Medium.eot","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Light.woff2","path":"css/fonts/roboto/Roboto-Light.woff2","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Medium.woff","path":"css/fonts/roboto/Roboto-Medium.woff","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Medium.woff2","path":"css/fonts/roboto/Roboto-Medium.woff2","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Regular.eot","path":"css/fonts/roboto/Roboto-Regular.eot","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Regular.woff","path":"css/fonts/roboto/Roboto-Regular.woff","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Thin.eot","path":"css/fonts/roboto/Roboto-Thin.eot","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Regular.woff2","path":"css/fonts/roboto/Roboto-Regular.woff2","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Thin.woff2","path":"css/fonts/roboto/Roboto-Thin.woff2","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Thin.woff","path":"css/fonts/roboto/Roboto-Thin.woff","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/fontawesome/fontawesome-webfont.woff","path":"css/fonts/fontawesome/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/fontawesome/fontawesome-webfont.woff2","path":"css/fonts/fontawesome/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Bold.woff","path":"css/fonts/roboto/Roboto-Bold.woff","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Medium.ttf","path":"css/fonts/roboto/Roboto-Medium.ttf","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/fontawesome/FontAwesome.otf","path":"css/fonts/fontawesome/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/fontawesome/fontawesome-webfont.eot","path":"css/fonts/fontawesome/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Bold.ttf","path":"css/fonts/roboto/Roboto-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Light.ttf","path":"css/fonts/roboto/Roboto-Light.ttf","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Regular.ttf","path":"css/fonts/roboto/Roboto-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Thin.ttf","path":"css/fonts/roboto/Roboto-Thin.ttf","modified":1,"renderable":1},{"_id":"themes/tomotoes/source/css/fonts/fontawesome/fontawesome-webfont.ttf","path":"css/fonts/fontawesome/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"source/img/1.jpg","path":"img/1.jpg","modified":1,"renderable":0},{"_id":"themes/tomotoes/source/css/fonts/fontawesome/fontawesome-webfont.svg","path":"css/fonts/fontawesome/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"8d00b24479e4ec8f7c294b25db0311473d4331a2","modified":1567756377949},{"_id":"themes/tomotoes/.editorconfig","hash":"6098d799d623f7cfed089899f03126f6bb9179a4","modified":1567578854000},{"_id":"themes/tomotoes/LICENSE","hash":"24944bf7920108f5a4790e6071c32e9102760c37","modified":1567578854004},{"_id":"themes/tomotoes/README.md","hash":"97654a4ceb070a44d25ecfdeec29b746a6dbbb8e","modified":1567578854005},{"_id":"themes/tomotoes/_config.yml","hash":"71a980f3290e74092573c7dbee70a17881539bc1","modified":1567578854006},{"_id":"themes/tomotoes/.DS_Store","hash":"17a0a1bdca57d0f29851ef7aa5a998b44abba810","modified":1567580609635},{"_id":"themes/tomotoes/package.json","hash":"f3b1f39f0a81366d4f81dc52f49235d5cd5f9dbe","modified":1567578854057},{"_id":"source/_posts/first-realize.md","hash":"089d4c75b2e22dcf7982e270396a260b8063d35e","modified":1568706779519},{"_id":"source/about/index.md","hash":"7c44808cfb01e1edd0e97c999e0c0cb86dcfa5c2","modified":1568706779521},{"_id":"source/categories/index.md","hash":"60eca86b9d3ee763e19c8318be20f9c3189531d3","modified":1567578853991},{"_id":"source/tags/index.md","hash":"b1fb767130c0b1d6d91763d1f59d1f5c00be75de","modified":1567578853996},{"_id":"source/img/text_align_last.jpg","hash":"cf9d8fa313e996ad89fd795733c78c51c11e59ed","modified":1567578853995},{"_id":"themes/tomotoes/languages/en.yml","hash":"2d6206dd762bb8ec2b4177dbb37d91e291126151","modified":1567578854006},{"_id":"themes/tomotoes/languages/es-ES.yml","hash":"b8b330fdc997463db838f6cfdb40108f6a746b27","modified":1567578854007},{"_id":"themes/tomotoes/languages/ja.yml","hash":"215b56fcede2a1e660943ca2d41319e98a680ab6","modified":1567578854007},{"_id":"themes/tomotoes/languages/nl-NL.yml","hash":"b722f7b096879f8f45e8bdf26345722d6da8ff21","modified":1567578854008},{"_id":"themes/tomotoes/languages/zh-CN.yml","hash":"e268c0a5c6785aebdf63ec1f46b18c3105ef089c","modified":1567578854009},{"_id":"themes/tomotoes/languages/zh-TW.yml","hash":"6a9e820be66eb12ae746f2527e0dc1adf927c685","modified":1567578854009},{"_id":"themes/tomotoes/layout/categories.ejs","hash":"9084ecdd9dd950afa0c3149d2be05611bc7c78f5","modified":1567578854052},{"_id":"themes/tomotoes/layout/category.ejs","hash":"7ea26a8a935886963eda82f41c7bd5270cf780d9","modified":1567578854053},{"_id":"themes/tomotoes/layout/layout.ejs","hash":"6c4415a5d86f4271db79808dca28b902f4b8a381","modified":1567578854054},{"_id":"themes/tomotoes/layout/card.ejs","hash":"730efe6fcadd0be95b595cdfc5747702e417ee08","modified":1567578854052},{"_id":"themes/tomotoes/layout/archive.ejs","hash":"fb83955d098c113cc20ebbb85ac3a3d14343953d","modified":1567578854051},{"_id":"themes/tomotoes/layout/index.ejs","hash":"17673079f7937279d249e48bb59e5249bcea212c","modified":1567578854053},{"_id":"themes/tomotoes/layout/page.ejs","hash":"18a3cfa0d0d3cd9f4c94a0a8107112d93f394d0f","modified":1567578854055},{"_id":"themes/tomotoes/layout/post.ejs","hash":"afbf8532dc8d148ca4dff2ca127a3382907cf2f5","modified":1567578854055},{"_id":"themes/tomotoes/layout/tag.ejs","hash":"36786a3de7f6cad58209603f7d84ba23addea174","modified":1567578854056},{"_id":"themes/tomotoes/layout/tags.ejs","hash":"5b26a347bd21690c05e63c1bd5ab8f5ea2f24e67","modified":1567578854057},{"_id":"themes/tomotoes/scripts/plugins.js","hash":"e439d717513616bedeed37ba9b05117470809b21","modified":1567578854058},{"_id":"themes/tomotoes/source/.DS_Store","hash":"c5a7ebbb26d879dfc98e16c67fcb5f765cdc2f1f","modified":1567580609634},{"_id":"source/_posts/Javascript/time.md","hash":"11b1fdeed80432673dbea3142918f5246e08c7fa","modified":1568706779516},{"_id":"source/_posts/css/css-knowledge-list.md","hash":"11fb65a307d50189dc904279ccbac6eb9d17319b","modified":1568706779517},{"_id":"source/_posts/regex/regex-base.md","hash":"511ecac4f1d83a05e2fc27d673fd5c51d1d0e0d5","modified":1568706966277},{"_id":"source/_posts/git/git-base.md","hash":"58e73416daf32ba27839c140f4fbfc34661ddb4e","modified":1568706779520},{"_id":"themes/tomotoes/.github/ISSUE_TEMPLATE/bug_report.md","hash":"83d211c67c12e8c1f6e9f796cfd0cecbf5160e15","modified":1567578854001},{"_id":"themes/tomotoes/.github/ISSUE_TEMPLATE/custom.md","hash":"84208538d48505ee8e49812cb336eb9882e08dc7","modified":1567578854003},{"_id":"themes/tomotoes/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1567578854004},{"_id":"themes/tomotoes/layout/_partial/archive.ejs","hash":"b93e5ac173f7b516769e16509acfd65da3e58903","modified":1567578854011},{"_id":"themes/tomotoes/layout/_partial/after-footer.ejs","hash":"211e5f8b428384d2f98eb245d2bf0cae07b4ccc1","modified":1567578854010},{"_id":"themes/tomotoes/layout/_partial/footer.ejs","hash":"105e678a6f2752521b51727c81bad399ff2c2e61","modified":1567578854011},{"_id":"themes/tomotoes/layout/_partial/head.ejs","hash":"2c8271c029be3d6abaea1965cb883bc53645edd5","modified":1567578854012},{"_id":"themes/tomotoes/layout/_partial/header.ejs","hash":"8c950129b58b65cb1bce8845afb56304bb37ec11","modified":1567578854013},{"_id":"themes/tomotoes/layout/_partial/index-item.ejs","hash":"1c703c42a3d6b825477bb0803a4f959720e27dc1","modified":1567578854014},{"_id":"themes/tomotoes/layout/_partial/loading.ejs","hash":"fd88a2c7e11f758531663cfb72f4bcaf54d5a747","modified":1567578854015},{"_id":"themes/tomotoes/layout/_partial/menu.ejs","hash":"5ccbcdf365b782a6160efe9cd0132b079a3e620b","modified":1567578854017},{"_id":"themes/tomotoes/layout/_partial/paginator.ejs","hash":"dc27242927890f130a64400596b9b7ad5fca8972","modified":1567578854019},{"_id":"themes/tomotoes/layout/_partial/post.ejs","hash":"888e378361b5f115c387f32bb2cf2a370bc4702c","modified":1567578854030},{"_id":"themes/tomotoes/layout/_partial/script.ejs","hash":"c3893e66017d7621cd11ebce6bb83f4165564f63","modified":1567578854046},{"_id":"themes/tomotoes/layout/_partial/search.ejs","hash":"55a1c6429fcf66cba22c865b565e85b9306e5760","modified":1567578854047},{"_id":"themes/tomotoes/layout/_partial/tags-bar.ejs","hash":"ae14ee5e49372af508f351c36873160741c1b9ce","modified":1567578854050},{"_id":"themes/tomotoes/layout/_partial/switch.ejs","hash":"061bf251c76cf3c3910ccc501976cee126a16d8b","modified":1567578854048},{"_id":"themes/tomotoes/source/css/style.less","hash":"1097dd867fe08d47a9d0a7f9920ade1e6f7d0d09","modified":1567578854176},{"_id":"themes/tomotoes/source/img/.DS_Store","hash":"eb8293c15b2d132935a5c3a73bdf2c524b831cf9","modified":1567735263878},{"_id":"themes/tomotoes/source/img/alipay.png","hash":"2b57ab7f2dae6c5b8fd34b50a38f2d47c141942a","modified":1567578854177},{"_id":"themes/tomotoes/source/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1567578854179},{"_id":"themes/tomotoes/source/img/default.cur","hash":"3381d41a9dcbb4c4e69559723481f85e2b8cf99e","modified":1567578854180},{"_id":"themes/tomotoes/source/img/desktop.ini","hash":"fa32d8fdd3aae31b03f5f36df14be6fb307eca60","modified":1567578854181},{"_id":"themes/tomotoes/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1567578854189},{"_id":"themes/tomotoes/source/img/favicon.ico","hash":"848593b6cb46a400c48ae2b81f3eaad270a26855","modified":1567578854188},{"_id":"themes/tomotoes/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1567578854190},{"_id":"themes/tomotoes/source/img/pointer.cur","hash":"3adb643f97571f547021fb57b2d9d768a252d546","modified":1567578854191},{"_id":"themes/tomotoes/source/img/wechat.png","hash":"40e61c097e4eaddff95a27d7a4980fbbf596d43e","modified":1567578854192},{"_id":"themes/tomotoes/source/js/main.js","hash":"b0e4997378f4a825f25b4991f6753a8638caf7d1","modified":1567578854197},{"_id":"themes/tomotoes/source/js/main.min.js","hash":"b0e4997378f4a825f25b4991f6753a8638caf7d1","modified":1567578854198},{"_id":"themes/tomotoes/source/js/script.js","hash":"223487b4118f6ba79ff589e77d1cbe58aec95fe6","modified":1567578854203},{"_id":"themes/tomotoes/source/js/script.min.js","hash":"223487b4118f6ba79ff589e77d1cbe58aec95fe6","modified":1567578854204},{"_id":"themes/tomotoes/source/img/avatar.jpg","hash":"12172d41881488751b36da5be6c8f03e9cb2c80e","modified":1565169935165},{"_id":"themes/tomotoes/source/img/dog.png","hash":"ef30d046fa20b3e9b01d6531e5e435dc4c9076a1","modified":1567578854185},{"_id":"themes/tomotoes/source/js/jquery.js","hash":"1055018c28ab41087ef9ccefe411606893dabea2","modified":1567578854195},{"_id":"themes/tomotoes/source/js/jquery.min.js","hash":"1055018c28ab41087ef9ccefe411606893dabea2","modified":1567578854196},{"_id":"themes/tomotoes/layout/_partial/plugins/baidu.ejs","hash":"c25cf074bb1d1ac30c0ff13480c029a866e61137","modified":1567578854020},{"_id":"themes/tomotoes/layout/_partial/plugins/gitalk.ejs","hash":"e12689917bb11d24a9e226ff22466fc5d12342a4","modified":1567578854022},{"_id":"themes/tomotoes/layout/_partial/plugins/gitment.ejs","hash":"5723d507eca4390e8e5d18c0770e7953b8c22f5a","modified":1567578854022},{"_id":"themes/tomotoes/layout/_partial/plugins/disqus.ejs","hash":"4a0c01e4195f685f9825fcd016d01249dbdd52ca","modified":1567578854021},{"_id":"themes/tomotoes/layout/_partial/plugins/mathjax.ejs","hash":"ea603a057196de53bd6afab1fddb93d11f27eb81","modified":1567578854024},{"_id":"themes/tomotoes/layout/_partial/plugins/page-visit.ejs","hash":"1222bc7c9922aec07bb280b1b2d253ccb7acc71e","modified":1567578854024},{"_id":"themes/tomotoes/layout/_partial/plugins/site-visit.ejs","hash":"ba647a1362957be481298b2a0f8e172758382dcb","modified":1567578854025},{"_id":"themes/tomotoes/layout/_partial/plugins/google-analytics.ejs","hash":"a947f4076b54b48d4df5baf2d5b3c39b632c7576","modified":1567578854023},{"_id":"themes/tomotoes/layout/_partial/plugins/tajs.ejs","hash":"97b48fe10be1c71d4ff25ccec3bd92d97466c9c5","modified":1567578854027},{"_id":"themes/tomotoes/layout/_partial/plugins/uyan.ejs","hash":"e370bd04ea5cf1c83e0c20516aff7ba3ca8b2d0b","modified":1567578854028},{"_id":"themes/tomotoes/layout/_partial/plugins/valine.ejs","hash":"ea4fd91af4f2fe0c8ca540fc0f6b760c31972bf3","modified":1567578854029},{"_id":"themes/tomotoes/layout/_partial/post/comment.ejs","hash":"545e7050df3dd9b597e2cc418bb0b1474ac48d88","modified":1567578854032},{"_id":"themes/tomotoes/layout/_partial/post/category.ejs","hash":"61750d41d8b5e838fbaa4011d6a1af5baf45591b","modified":1567578854031},{"_id":"themes/tomotoes/layout/_partial/post/copyright.ejs","hash":"bf70db059408704ce69bc999da59009b73f701a1","modified":1567578854035},{"_id":"themes/tomotoes/layout/_partial/post/date.ejs","hash":"ea85b46e12d3b9c3612eef7aa76289a663fbc096","modified":1567578854037},{"_id":"themes/tomotoes/layout/_partial/post/head-meta.ejs","hash":"b0c680ce5b8aaf461a6731b1ff1287bd140c168a","modified":1567578854038},{"_id":"themes/tomotoes/layout/_partial/post/nav.ejs","hash":"e97a44b971bf0e69bf596d8022938fa975795081","modified":1567578854039},{"_id":"themes/tomotoes/layout/_partial/post/reward.ejs","hash":"7709eed57556784b1a58a25f879c47b0cdb94156","modified":1567578854041},{"_id":"themes/tomotoes/layout/_partial/post/reward-btn.ejs","hash":"c954f13d5472946991ce2bca5d110935bcd63020","modified":1567578854040},{"_id":"themes/tomotoes/layout/_partial/post/share-fab.ejs","hash":"93482ad7d1e01b966f5ee1c5d12b88564e02b349","modified":1567578854042},{"_id":"themes/tomotoes/layout/_partial/post/share.ejs","hash":"f2013ae3da4f5ec5cd3ad4184ce28971acab0ecf","modified":1567578854042},{"_id":"themes/tomotoes/layout/_partial/post/tag.ejs","hash":"b3dc38652c4a018a37418136478dcd522fc49f79","modified":1567578854043},{"_id":"themes/tomotoes/layout/_partial/post/toc.ejs","hash":"d146530e081ec2fc0593a6bb250bd6569427a072","modified":1567578854044},{"_id":"themes/tomotoes/layout/_partial/post/title.ejs","hash":"e308f5202e62e90ae678c5bff865f07ee204f423","modified":1567578854044},{"_id":"themes/tomotoes/layout/_partial/post/updated.ejs","hash":"25b9e923e9a60187755f713f2e5b4828e1fa97b3","modified":1567578854045},{"_id":"themes/tomotoes/source/css/_partial/archives.less","hash":"ba6644dc205ff52ddd6f5cf10528bd28b775f61d","modified":1567578854058},{"_id":"themes/tomotoes/source/css/_partial/footer.less","hash":"0ef121c89f6ddb328d0ca397b6c76ed5c0584bf9","modified":1567578854063},{"_id":"themes/tomotoes/source/css/_partial/article.less","hash":"87d88d5dc98e12c42a863709885a93cafad846b8","modified":1567756340092},{"_id":"themes/tomotoes/source/css/_partial/cursor.less","hash":"3e98a1d67c05bc2bdb9e52387ae7b28cedc41e4c","modified":1567578854060},{"_id":"themes/tomotoes/source/css/_partial/gotop.less","hash":"605ff30fa57f3f84c6edbba914ef996d61813bd9","modified":1567578854067},{"_id":"themes/tomotoes/source/css/_partial/header.less","hash":"d8f2bc2f62312aa6f98f1f5558ea047da102ac99","modified":1567578854070},{"_id":"themes/tomotoes/source/css/_partial/highlight.less","hash":"db6dc354112f1380676d53d132369d3ac84af57c","modified":1567578854072},{"_id":"themes/tomotoes/source/css/_partial/layout.less","hash":"f013c3f30a5a689880e264658823cd9dc47d4b25","modified":1567578854073},{"_id":"themes/tomotoes/source/css/_partial/lightbox.less","hash":"b058a0ca88a5f0f7d207a2b182b172addfa1e5d8","modified":1567578854075},{"_id":"themes/tomotoes/source/css/_partial/loading.less","hash":"ccc9cd3ae59c051cb38d32ddbbb85c3355ce4a74","modified":1567578854076},{"_id":"themes/tomotoes/source/css/_partial/menu.less","hash":"0c55c584b4c8661d7eb16bde293ee5ebd81be203","modified":1567578854077},{"_id":"themes/tomotoes/source/css/_partial/page.less","hash":"107dfaaad36704e5ef1d152606ace374f8739a5c","modified":1567578854078},{"_id":"themes/tomotoes/source/css/_partial/postlist.less","hash":"aa0b89b65407d6eec5a587c29f57e46c400fc7f5","modified":1567578854079},{"_id":"themes/tomotoes/source/css/_partial/reward.less","hash":"6fd843bf90042fa33c08848f4233a87259aad22c","modified":1567578854081},{"_id":"themes/tomotoes/source/css/_partial/roboto.less","hash":"2e0469ed8161d5672d903ca1a8027cd65fe007f1","modified":1567578854082},{"_id":"themes/tomotoes/source/css/_partial/search.less","hash":"5173bb54f3f12471ae14222d8e7c872e15ea718b","modified":1567578854083},{"_id":"themes/tomotoes/source/css/_partial/share.less","hash":"455e47688ad9be241568e1cf7bb081599a3bfc39","modified":1567578854084},{"_id":"themes/tomotoes/source/css/_partial/tags.less","hash":"90d99814a60100c8cefca5c1863a9a4c572b7693","modified":1567578854086},{"_id":"themes/tomotoes/source/css/_partial/variable.less","hash":"658c54717fbae0d2c294104f222effc16053ba39","modified":1567578854088},{"_id":"themes/tomotoes/source/css/_partial/waves.less","hash":"f54f963e3c2db0aeac2443e28bc322dae1db4c91","modified":1567578854088},{"_id":"themes/tomotoes/source/css/_partial/fontawesome.less","hash":"ca30b732d2efbb0cd55a272ecdabc97f895aee78","modified":1567578854062},{"_id":"source/img/pointer_events_use.jpg","hash":"3fc7f9150178e3ffc2a14a4f37a0e5528c6d34fa","modified":1567578853994},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1567578854123},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1567578854130},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1567578854131},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1567578854144},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1567578854147},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1567578854145},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1567578854155},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1567578854156},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1567578854157},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1567578854162},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1567578854165},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1567578854163},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1567578854174},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1567578854173},{"_id":"themes/tomotoes/source/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1567578854118},{"_id":"themes/tomotoes/source/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1567578854121},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1567578854128},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1567578854153},{"_id":"themes/tomotoes/source/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1567578854092},{"_id":"themes/tomotoes/source/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1567578854105},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1567578854126},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1567578854139},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1567578854160},{"_id":"themes/tomotoes/source/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1567578854171},{"_id":"themes/tomotoes/source/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1567578854115},{"_id":"source/img/1.jpg","hash":"236b73992a48fa8dbe2e8b239f942bd241171970","modified":1567756340090},{"_id":"themes/tomotoes/source/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1567578854110}],"Category":[{"name":"基础","_id":"ck0nlxve60003ryi2ilprerkf"},{"name":"date","_id":"ck0nlxvfa000cryi2bq25byl6"},{"name":"css","_id":"ck0nlxvfc000gryi2rzvlmir7"},{"name":"Regex","_id":"ck0nlxvfd000jryi2u73goo4c"},{"name":"git","_id":"ck0nlxvfe000oryi29aktuttc"}],"Data":[],"Page":[{"title":"千呼万唤始出来","layout":"about","comments":0,"reward":false,"date":"2019-08-30T02:40:38.000Z","_content":"\nabout","source":"about/index.md","raw":"---\ntitle: 千呼万唤始出来\nlayout: about\ncomments: false\nreward: false\ndate: 2019-08-30 10:40:38\n---\n\nabout","updated":"2019-09-17T07:52:59.521Z","path":"about/index.html","_id":"ck0nlxve30001ryi2714xkwco","content":"<p>about</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"excerpt":"","more":"<p>about</p>\n"},{"title":"categories","layout":"categories","comments":0,"reward":false,"date":"2019-08-30T02:54:38.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\nlayout: categories\ncomments: false\nreward: false\ndate: 2019-08-30 10:54:38\n---\n","updated":"2019-09-04T06:34:13.991Z","path":"categories/index.html","_id":"ck0nlxve50002ryi2awnayl8t","content":"<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","layout":"tags","comments":0,"reward":false,"date":"2019-08-30T02:53:17.000Z","_content":"\ntags","source":"tags/index.md","raw":"---\ntitle: tags\nlayout: tags\ncomments: false\nreward: false\ndate: 2019-08-30 10:53:17\n---\n\ntags","updated":"2019-09-04T06:34:13.996Z","path":"tags/index.html","_id":"ck0nlxve80005ryi2rvasq5uc","content":"<p>tags</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"excerpt":"","more":"<p>tags</p>\n"}],"Post":[{"title":"初识Hexo","abbrlink":"97bd5563","date":"2019-08-27T16:00:00.000Z","_content":"hexo的学习历程中，学习到的hexo语法以及一些技巧。\n<!-- more  -->\n最近在学习利用hexo来搭建个人博客，把学习过程中遇到的问题以及学习到的语法进行来总结，希望可以帮到其他小伙伴们。\n\n### 新增post文章页面\n命令行输入：```hexo new [layout] <title>```。\n其中，```layout```指文章页面的布局，默认为post，可不输入。PS：可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。```title```指文章的标题，默认文件名称就是标题的名称。\n\n### 标签插件\n标签插件估计是最常用的一个语法，它是用于在文章中快速插入特定内容的插件，跟markdown语法中类似。\n\n#### 引用块 - blockquote/endblockquote\n语法如下：\n```\n{% blockquote [作者[, 其他资源信息]] [链接] [链接标题] %}\n展示内容\n{% endblockquote %}\n```\n\n示例：\n```\n{% blockquote sugarZ, 程序圆 http://localhost:4000/sugarZ/2019/08/27/first-realize/ sugarZ的博客 %}\n展示内容\n{% endblockquote %}\n```\n\n{% blockquote sugarZ, 程序圆 http://localhost:4000/sugarZ/2019/08/27/first-realize/ sugarZ的博客 %}\n展示内容\n{% endblockquote %}\n\n#### 代码块 - codeblock/endcodeblock\n语法如下：\n```\n{% codeblock [标题] [lang:language] [链接] [链接title] %}\ncode snippet\n{% endcodeblock %}\n```\n代码块的语法除了hexo特有的这种，还有就是markdown中的反引号语法，效果一样，反引号语法如下：\n``` \n``` [language] [title] [url] [link text] code snippet ```\n```\n\n示例：\n{% codeblock %}\nalert('Hello World!')\n{% endcodeblock %}\n\n#### Pull Quote\n语法：\n```\n{% pullquote [class] %}\ncontent\n{% endpullquote %}\n```\n\n示例：\n{% pullquote %}\ncontent\n{% endpullquote %}\n\n#### 插入图片 - Image\n在文章中插入图片，可自定义图片宽高，语法：\n```\n{% img [class names] /path/to/image [width] [height] \"title text 'alt text'\" %}\n```\n\n示例：\n{% img /path/to/image 100 20 \"ceshi\" %}\n\n#### 文章中插入链接 - Link\n在文章中插入链接，并自动给外部链接添加```target=\"_blank\"```属性，语法：\n```\n{% link\n链接文案 链接url [external] [title]\n%}\n```\n\n示例：\n{% link\ntext http://localhost:4000/sugarZ/2019/08/27/first-realize/\n%}\n\n#### 实现段落文本缩进\n可以在需要缩进的段落文本前添加```&nbsp;&nbsp;&nbsp;```，来实现段落文本的缩进。每一个```&nbsp;```代表一个空格的距离。\n","source":"_posts/first-realize.md","raw":"---\ntitle: 初识Hexo\nabbrlink: 97bd5563\ndate: 2019-08-28\ntags:\n  - hexo\n  - 语法\ncategories: 基础\n---\nhexo的学习历程中，学习到的hexo语法以及一些技巧。\n<!-- more  -->\n最近在学习利用hexo来搭建个人博客，把学习过程中遇到的问题以及学习到的语法进行来总结，希望可以帮到其他小伙伴们。\n\n### 新增post文章页面\n命令行输入：```hexo new [layout] <title>```。\n其中，```layout```指文章页面的布局，默认为post，可不输入。PS：可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。```title```指文章的标题，默认文件名称就是标题的名称。\n\n### 标签插件\n标签插件估计是最常用的一个语法，它是用于在文章中快速插入特定内容的插件，跟markdown语法中类似。\n\n#### 引用块 - blockquote/endblockquote\n语法如下：\n```\n{% blockquote [作者[, 其他资源信息]] [链接] [链接标题] %}\n展示内容\n{% endblockquote %}\n```\n\n示例：\n```\n{% blockquote sugarZ, 程序圆 http://localhost:4000/sugarZ/2019/08/27/first-realize/ sugarZ的博客 %}\n展示内容\n{% endblockquote %}\n```\n\n{% blockquote sugarZ, 程序圆 http://localhost:4000/sugarZ/2019/08/27/first-realize/ sugarZ的博客 %}\n展示内容\n{% endblockquote %}\n\n#### 代码块 - codeblock/endcodeblock\n语法如下：\n```\n{% codeblock [标题] [lang:language] [链接] [链接title] %}\ncode snippet\n{% endcodeblock %}\n```\n代码块的语法除了hexo特有的这种，还有就是markdown中的反引号语法，效果一样，反引号语法如下：\n``` \n``` [language] [title] [url] [link text] code snippet ```\n```\n\n示例：\n{% codeblock %}\nalert('Hello World!')\n{% endcodeblock %}\n\n#### Pull Quote\n语法：\n```\n{% pullquote [class] %}\ncontent\n{% endpullquote %}\n```\n\n示例：\n{% pullquote %}\ncontent\n{% endpullquote %}\n\n#### 插入图片 - Image\n在文章中插入图片，可自定义图片宽高，语法：\n```\n{% img [class names] /path/to/image [width] [height] \"title text 'alt text'\" %}\n```\n\n示例：\n{% img /path/to/image 100 20 \"ceshi\" %}\n\n#### 文章中插入链接 - Link\n在文章中插入链接，并自动给外部链接添加```target=\"_blank\"```属性，语法：\n```\n{% link\n链接文案 链接url [external] [title]\n%}\n```\n\n示例：\n{% link\ntext http://localhost:4000/sugarZ/2019/08/27/first-realize/\n%}\n\n#### 实现段落文本缩进\n可以在需要缩进的段落文本前添加```&nbsp;&nbsp;&nbsp;```，来实现段落文本的缩进。每一个```&nbsp;```代表一个空格的距离。\n","slug":"first-realize","published":1,"updated":"2019-09-17T07:52:59.519Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0nlxvdx0000ryi29v8u34x9","content":"<p>hexo的学习历程中，学习到的hexo语法以及一些技巧。</p>\n<a id=\"more\"></a>\n<p>最近在学习利用hexo来搭建个人博客，把学习过程中遇到的问题以及学习到的语法进行来总结，希望可以帮到其他小伙伴们。</p>\n<h3 id=\"新增post文章页面\"><a href=\"#新增post文章页面\" class=\"headerlink\" title=\"新增post文章页面\"></a>新增post文章页面</h3><p>命令行输入：<code>hexo new [layout] &lt;title&gt;</code>。<br>其中，<code>layout</code>指文章页面的布局，默认为post，可不输入。PS：可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。<code>title</code>指文章的标题，默认文件名称就是标题的名称。</p>\n<h3 id=\"标签插件\"><a href=\"#标签插件\" class=\"headerlink\" title=\"标签插件\"></a>标签插件</h3><p>标签插件估计是最常用的一个语法，它是用于在文章中快速插入特定内容的插件，跟markdown语法中类似。</p>\n<h4 id=\"引用块-blockquote-endblockquote\"><a href=\"#引用块-blockquote-endblockquote\" class=\"headerlink\" title=\"引用块 - blockquote/endblockquote\"></a>引用块 - blockquote/endblockquote</h4><p>语法如下：</p>\n<pre><code>{% blockquote [作者[, 其他资源信息]] [链接] [链接标题] %}\n展示内容\n{% endblockquote %}</code></pre><p>示例：</p>\n<pre><code>{% blockquote sugarZ, 程序圆 http://localhost:4000/sugarZ/2019/08/27/first-realize/ sugarZ的博客 %}\n展示内容\n{% endblockquote %}</code></pre><blockquote><p>展示内容</p>\n<footer><strong>sugarZ, 程序圆</strong><cite><a href=\"http://localhost:4000/sugarZ/2019/08/27/first-realize/\" target=\"_blank\" rel=\"noopener\">sugarZ的博客</a></cite></footer></blockquote>\n\n<h4 id=\"代码块-codeblock-endcodeblock\"><a href=\"#代码块-codeblock-endcodeblock\" class=\"headerlink\" title=\"代码块 - codeblock/endcodeblock\"></a>代码块 - codeblock/endcodeblock</h4><p>语法如下：</p>\n<pre><code>{% codeblock [标题] [lang:language] [链接] [链接title] %}\ncode snippet\n{% endcodeblock %}</code></pre><p>代码块的语法除了hexo特有的这种，还有就是markdown中的反引号语法，效果一样，反引号语法如下：</p>\n<pre><code>``` [language] [title] [url] [link text] code snippet ```</code></pre><p>示例：</p>\n{% codeblock %}\nalert('Hello World!')\n{% endcodeblock %}\n\n<h4 id=\"Pull-Quote\"><a href=\"#Pull-Quote\" class=\"headerlink\" title=\"Pull Quote\"></a>Pull Quote</h4><p>语法：</p>\n<pre><code>{% pullquote [class] %}\ncontent\n{% endpullquote %}</code></pre><p>示例：</p>\n<blockquote class=\"pullquote\"><p>content</p>\n</blockquote>\n\n<h4 id=\"插入图片-Image\"><a href=\"#插入图片-Image\" class=\"headerlink\" title=\"插入图片 - Image\"></a>插入图片 - Image</h4><p>在文章中插入图片，可自定义图片宽高，语法：</p>\n<pre><code>{% img [class names] /path/to/image [width] [height] \"title text 'alt text'\" %}</code></pre><p>示例：</p>\n{% img /path/to/image 100 20 \"ceshi\" %}\n\n<h4 id=\"文章中插入链接-Link\"><a href=\"#文章中插入链接-Link\" class=\"headerlink\" title=\"文章中插入链接 - Link\"></a>文章中插入链接 - Link</h4><p>在文章中插入链接，并自动给外部链接添加<code>target=\"_blank\"</code>属性，语法：</p>\n<pre><code>{% link\n链接文案 链接url [external] [title]\n%}</code></pre><p>示例：</p>\n<a href=\"http://localhost:4000/sugarZ/2019/08/27/first-realize/\" target=\"_blank\" rel=\"noopener\">text</a>\n\n<h4 id=\"实现段落文本缩进\"><a href=\"#实现段落文本缩进\" class=\"headerlink\" title=\"实现段落文本缩进\"></a>实现段落文本缩进</h4><p>可以在需要缩进的段落文本前添加<code>&amp;nbsp;&amp;nbsp;&amp;nbsp;</code>，来实现段落文本的缩进。每一个<code>&amp;nbsp;</code>代表一个空格的距离。</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"excerpt":"<p>hexo的学习历程中，学习到的hexo语法以及一些技巧。</p>","more":"<p>最近在学习利用hexo来搭建个人博客，把学习过程中遇到的问题以及学习到的语法进行来总结，希望可以帮到其他小伙伴们。</p>\n<h3 id=\"新增post文章页面\"><a href=\"#新增post文章页面\" class=\"headerlink\" title=\"新增post文章页面\"></a>新增post文章页面</h3><p>命令行输入：<code>hexo new [layout] &lt;title&gt;</code>。<br>其中，<code>layout</code>指文章页面的布局，默认为post，可不输入。PS：可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。<code>title</code>指文章的标题，默认文件名称就是标题的名称。</p>\n<h3 id=\"标签插件\"><a href=\"#标签插件\" class=\"headerlink\" title=\"标签插件\"></a>标签插件</h3><p>标签插件估计是最常用的一个语法，它是用于在文章中快速插入特定内容的插件，跟markdown语法中类似。</p>\n<h4 id=\"引用块-blockquote-endblockquote\"><a href=\"#引用块-blockquote-endblockquote\" class=\"headerlink\" title=\"引用块 - blockquote/endblockquote\"></a>引用块 - blockquote/endblockquote</h4><p>语法如下：</p>\n<pre><code>{% blockquote [作者[, 其他资源信息]] [链接] [链接标题] %}\n展示内容\n{% endblockquote %}</code></pre><p>示例：</p>\n<pre><code>{% blockquote sugarZ, 程序圆 http://localhost:4000/sugarZ/2019/08/27/first-realize/ sugarZ的博客 %}\n展示内容\n{% endblockquote %}</code></pre><blockquote><p>展示内容</p>\n<footer><strong>sugarZ, 程序圆</strong><cite><a href=\"http://localhost:4000/sugarZ/2019/08/27/first-realize/\" target=\"_blank\" rel=\"noopener\">sugarZ的博客</a></cite></footer></blockquote>\n\n<h4 id=\"代码块-codeblock-endcodeblock\"><a href=\"#代码块-codeblock-endcodeblock\" class=\"headerlink\" title=\"代码块 - codeblock/endcodeblock\"></a>代码块 - codeblock/endcodeblock</h4><p>语法如下：</p>\n<pre><code>{% codeblock [标题] [lang:language] [链接] [链接title] %}\ncode snippet\n{% endcodeblock %}</code></pre><p>代码块的语法除了hexo特有的这种，还有就是markdown中的反引号语法，效果一样，反引号语法如下：</p>\n<pre><code>``` [language] [title] [url] [link text] code snippet ```</code></pre><p>示例：</p>\n{% codeblock %}\nalert('Hello World!')\n{% endcodeblock %}\n\n<h4 id=\"Pull-Quote\"><a href=\"#Pull-Quote\" class=\"headerlink\" title=\"Pull Quote\"></a>Pull Quote</h4><p>语法：</p>\n<pre><code>{% pullquote [class] %}\ncontent\n{% endpullquote %}</code></pre><p>示例：</p>\n<blockquote class=\"pullquote\"><p>content</p>\n</blockquote>\n\n<h4 id=\"插入图片-Image\"><a href=\"#插入图片-Image\" class=\"headerlink\" title=\"插入图片 - Image\"></a>插入图片 - Image</h4><p>在文章中插入图片，可自定义图片宽高，语法：</p>\n<pre><code>{% img [class names] /path/to/image [width] [height] \"title text 'alt text'\" %}</code></pre><p>示例：</p>\n{% img /path/to/image 100 20 \"ceshi\" %}\n\n<h4 id=\"文章中插入链接-Link\"><a href=\"#文章中插入链接-Link\" class=\"headerlink\" title=\"文章中插入链接 - Link\"></a>文章中插入链接 - Link</h4><p>在文章中插入链接，并自动给外部链接添加<code>target=&quot;_blank&quot;</code>属性，语法：</p>\n<pre><code>{% link\n链接文案 链接url [external] [title]\n%}</code></pre><p>示例：</p>\n<a href=\"http://localhost:4000/sugarZ/2019/08/27/first-realize/\" target=\"_blank\" rel=\"noopener\">text</a>\n\n<h4 id=\"实现段落文本缩进\"><a href=\"#实现段落文本缩进\" class=\"headerlink\" title=\"实现段落文本缩进\"></a>实现段落文本缩进</h4><p>可以在需要缩进的段落文本前添加<code>&amp;nbsp;&amp;nbsp;&amp;nbsp;</code>，来实现段落文本的缩进。每一个<code>&amp;nbsp;</code>代表一个空格的距离。</p>"},{"title":"JS中对于时间以及时间戳的各种操作","abbrlink":"6f949845","date":"2019-09-16T16:00:00.000Z","_content":"项目开发中，有时需要将服务端返回的时间数据格式化，服务端返回的时间格式不同，前端对时间的操作方法也不一样。\n以下是我在项目开发中遇到的一些对时间进行相关操作的总结。\n<!-- more -->\n#### 时间戳 -> 当前时间\n时间戳 -> 当前时间(形如'2018-12-28 17:41:22')\n>时间戳为10位(精确到秒)，需*1000；\n>时间戳为13位(精确到毫秒)，无需乘1000。\n\n假设前端同学获取到的时间戳是```let time = 1545990082242```，\n然后调用函数```toTimeDate(time)```，返回当前时间。\ntoTimeDate 函数具体实现方法如下：\n\n```\nlet time = 1545990082242;\nconsole.log(toTimeDate(time)); // 输出 2018-12-28 17:41:22\nfunction toTimeDate(timetamp) {\n  var date = new Date(timetamp); // 输出 date=Fri Dec 28 2018 17:41:22 GMT+0800 (中国标准时间)\n  var year = date.getFullYear(); // 输出年 2018\n  var month = date.getMonth()+1; // 输出月 12\n  var dates = date.getDate(); // 输出日 28\n  var hour = date.getHours(); // 输出时 17\n  var minute = date.getMinutes(); // 输出分 41\n  var second = date.getSeconds(); // 输出秒 22\n  return `${year}-${month}-${dates} ${hour}:${minute}:${second}`;\n}\n```\n\n#### 当前时间 -> 时间戳\n当前时间(形如'2018-12-28 17:41:22') -> 时间戳\n>安卓系统中，```-```或者```/```符号都可以；\n>iOS系统，只能识别```/```符号。\n\n具体实现方法如下：\n```\nvar date = new Date('2018-11-28 17:41:22'); // 输出date= Fri Dec 28 2018 17:41:22 GMT+0800 (中国标准时间)\n// 有三种方案获取时间戳\nvar time1 = date.getTime()； // 方案一：精确到毫秒，输出 1545990082123\nvar time2 = date.valueOf()； // 方案二：精确到毫秒，输出 1545990082123\nvar time3 = Date.parse(date)； // 方案三：精确到秒，输出 1545990082000\n```\n\n#### 国际标准时间 -> 时间戳\n国际标准时间(形如'2019-03-15T09:15:32.473Z') -> 时间戳\n\n\n#### 获取当前时间的前/后一天\n实现方法如下：\n```\nlet curDate = new Date(); // Tue Sep 17 2019 13:55:11 GMT+0800 (中国标准时间)\n// 当前时间的前一天\nlet preDate = new Date(curDate.getTime() - 24 * 60 * 60 * 1000); // Mon Sep 16 2019 13:55:11 GMT+0800 (中国标准时间)\n// 当前时间的后一天\nlet nextDate = new Date(curDate.getTime() + 24 * 60 * 60 * 1000); // Wed Sep 18 2019 13:55:11 GMT+0800 (中国标准时间)\n```\n\n#### 获取具体某月的天数\n通过Date对象可以获取到具体某月的天数是多少，而且不需要判断年份是否是闰年。\n实现方法如下：\n```\nlet dt = new Date(2015, 2, 0);\nlet monthDate = dt.getDate();\nconsole.log(monthDate); // 28\n```\n其中Date对象里的三个参数一次表示 某年、某月、0。Date对象的月份是从0开始的，也就是说1月份用0表示，所以上述的0就表示为3月份的第0天，但是JS中日期的范围是1～31，所以当日期设为0时，会向前一天，也就是上个月的最后一天。","source":"_posts/Javascript/time.md","raw":"---\ntitle: JS中对于时间以及时间戳的各种操作\nabbrlink: 6f949845\ndate: 2019-09-17\ntags:\n  - Javascript\n  - date\ncategories: date\n---\n项目开发中，有时需要将服务端返回的时间数据格式化，服务端返回的时间格式不同，前端对时间的操作方法也不一样。\n以下是我在项目开发中遇到的一些对时间进行相关操作的总结。\n<!-- more -->\n#### 时间戳 -> 当前时间\n时间戳 -> 当前时间(形如'2018-12-28 17:41:22')\n>时间戳为10位(精确到秒)，需*1000；\n>时间戳为13位(精确到毫秒)，无需乘1000。\n\n假设前端同学获取到的时间戳是```let time = 1545990082242```，\n然后调用函数```toTimeDate(time)```，返回当前时间。\ntoTimeDate 函数具体实现方法如下：\n\n```\nlet time = 1545990082242;\nconsole.log(toTimeDate(time)); // 输出 2018-12-28 17:41:22\nfunction toTimeDate(timetamp) {\n  var date = new Date(timetamp); // 输出 date=Fri Dec 28 2018 17:41:22 GMT+0800 (中国标准时间)\n  var year = date.getFullYear(); // 输出年 2018\n  var month = date.getMonth()+1; // 输出月 12\n  var dates = date.getDate(); // 输出日 28\n  var hour = date.getHours(); // 输出时 17\n  var minute = date.getMinutes(); // 输出分 41\n  var second = date.getSeconds(); // 输出秒 22\n  return `${year}-${month}-${dates} ${hour}:${minute}:${second}`;\n}\n```\n\n#### 当前时间 -> 时间戳\n当前时间(形如'2018-12-28 17:41:22') -> 时间戳\n>安卓系统中，```-```或者```/```符号都可以；\n>iOS系统，只能识别```/```符号。\n\n具体实现方法如下：\n```\nvar date = new Date('2018-11-28 17:41:22'); // 输出date= Fri Dec 28 2018 17:41:22 GMT+0800 (中国标准时间)\n// 有三种方案获取时间戳\nvar time1 = date.getTime()； // 方案一：精确到毫秒，输出 1545990082123\nvar time2 = date.valueOf()； // 方案二：精确到毫秒，输出 1545990082123\nvar time3 = Date.parse(date)； // 方案三：精确到秒，输出 1545990082000\n```\n\n#### 国际标准时间 -> 时间戳\n国际标准时间(形如'2019-03-15T09:15:32.473Z') -> 时间戳\n\n\n#### 获取当前时间的前/后一天\n实现方法如下：\n```\nlet curDate = new Date(); // Tue Sep 17 2019 13:55:11 GMT+0800 (中国标准时间)\n// 当前时间的前一天\nlet preDate = new Date(curDate.getTime() - 24 * 60 * 60 * 1000); // Mon Sep 16 2019 13:55:11 GMT+0800 (中国标准时间)\n// 当前时间的后一天\nlet nextDate = new Date(curDate.getTime() + 24 * 60 * 60 * 1000); // Wed Sep 18 2019 13:55:11 GMT+0800 (中国标准时间)\n```\n\n#### 获取具体某月的天数\n通过Date对象可以获取到具体某月的天数是多少，而且不需要判断年份是否是闰年。\n实现方法如下：\n```\nlet dt = new Date(2015, 2, 0);\nlet monthDate = dt.getDate();\nconsole.log(monthDate); // 28\n```\n其中Date对象里的三个参数一次表示 某年、某月、0。Date对象的月份是从0开始的，也就是说1月份用0表示，所以上述的0就表示为3月份的第0天，但是JS中日期的范围是1～31，所以当日期设为0时，会向前一天，也就是上个月的最后一天。","slug":"Javascript/time","published":1,"updated":"2019-09-17T07:52:59.516Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0nlxvf7000aryi2hswzvq1n","content":"<p>项目开发中，有时需要将服务端返回的时间数据格式化，服务端返回的时间格式不同，前端对时间的操作方法也不一样。<br>以下是我在项目开发中遇到的一些对时间进行相关操作的总结。</p>\n<a id=\"more\"></a>\n<h4 id=\"时间戳-gt-当前时间\"><a href=\"#时间戳-gt-当前时间\" class=\"headerlink\" title=\"时间戳 -> 当前时间\"></a>时间戳 -&gt; 当前时间</h4><p>时间戳 -&gt; 当前时间(形如’2018-12-28 17:41:22’)</p>\n<blockquote>\n<p>时间戳为10位(精确到秒)，需*1000；<br>时间戳为13位(精确到毫秒)，无需乘1000。</p>\n</blockquote>\n<p>假设前端同学获取到的时间戳是<code>let time = 1545990082242</code>，<br>然后调用函数<code>toTimeDate(time)</code>，返回当前时间。<br>toTimeDate 函数具体实现方法如下：</p>\n<pre><code>let time = 1545990082242;\nconsole.log(toTimeDate(time)); // 输出 2018-12-28 17:41:22\nfunction toTimeDate(timetamp) {\n  var date = new Date(timetamp); // 输出 date=Fri Dec 28 2018 17:41:22 GMT+0800 (中国标准时间)\n  var year = date.getFullYear(); // 输出年 2018\n  var month = date.getMonth()+1; // 输出月 12\n  var dates = date.getDate(); // 输出日 28\n  var hour = date.getHours(); // 输出时 17\n  var minute = date.getMinutes(); // 输出分 41\n  var second = date.getSeconds(); // 输出秒 22\n  return `${year}-${month}-${dates} ${hour}:${minute}:${second}`;\n}</code></pre><h4 id=\"当前时间-gt-时间戳\"><a href=\"#当前时间-gt-时间戳\" class=\"headerlink\" title=\"当前时间 -> 时间戳\"></a>当前时间 -&gt; 时间戳</h4><p>当前时间(形如’2018-12-28 17:41:22’) -&gt; 时间戳</p>\n<blockquote>\n<p>安卓系统中，<code>-</code>或者<code>/</code>符号都可以；<br>iOS系统，只能识别<code>/</code>符号。</p>\n</blockquote>\n<p>具体实现方法如下：</p>\n<pre><code>var date = new Date('2018-11-28 17:41:22'); // 输出date= Fri Dec 28 2018 17:41:22 GMT+0800 (中国标准时间)\n// 有三种方案获取时间戳\nvar time1 = date.getTime()； // 方案一：精确到毫秒，输出 1545990082123\nvar time2 = date.valueOf()； // 方案二：精确到毫秒，输出 1545990082123\nvar time3 = Date.parse(date)； // 方案三：精确到秒，输出 1545990082000</code></pre><h4 id=\"国际标准时间-gt-时间戳\"><a href=\"#国际标准时间-gt-时间戳\" class=\"headerlink\" title=\"国际标准时间 -> 时间戳\"></a>国际标准时间 -&gt; 时间戳</h4><p>国际标准时间(形如’2019-03-15T09:15:32.473Z’) -&gt; 时间戳</p>\n<h4 id=\"获取当前时间的前-后一天\"><a href=\"#获取当前时间的前-后一天\" class=\"headerlink\" title=\"获取当前时间的前/后一天\"></a>获取当前时间的前/后一天</h4><p>实现方法如下：</p>\n<pre><code>let curDate = new Date(); // Tue Sep 17 2019 13:55:11 GMT+0800 (中国标准时间)\n// 当前时间的前一天\nlet preDate = new Date(curDate.getTime() - 24 * 60 * 60 * 1000); // Mon Sep 16 2019 13:55:11 GMT+0800 (中国标准时间)\n// 当前时间的后一天\nlet nextDate = new Date(curDate.getTime() + 24 * 60 * 60 * 1000); // Wed Sep 18 2019 13:55:11 GMT+0800 (中国标准时间)</code></pre><h4 id=\"获取具体某月的天数\"><a href=\"#获取具体某月的天数\" class=\"headerlink\" title=\"获取具体某月的天数\"></a>获取具体某月的天数</h4><p>通过Date对象可以获取到具体某月的天数是多少，而且不需要判断年份是否是闰年。<br>实现方法如下：</p>\n<pre><code>let dt = new Date(2015, 2, 0);\nlet monthDate = dt.getDate();\nconsole.log(monthDate); // 28</code></pre><p>其中Date对象里的三个参数一次表示 某年、某月、0。Date对象的月份是从0开始的，也就是说1月份用0表示，所以上述的0就表示为3月份的第0天，但是JS中日期的范围是1～31，所以当日期设为0时，会向前一天，也就是上个月的最后一天。</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"excerpt":"<p>项目开发中，有时需要将服务端返回的时间数据格式化，服务端返回的时间格式不同，前端对时间的操作方法也不一样。<br>以下是我在项目开发中遇到的一些对时间进行相关操作的总结。</p>","more":"<h4 id=\"时间戳-gt-当前时间\"><a href=\"#时间戳-gt-当前时间\" class=\"headerlink\" title=\"时间戳 -&gt; 当前时间\"></a>时间戳 -&gt; 当前时间</h4><p>时间戳 -&gt; 当前时间(形如’2018-12-28 17:41:22’)</p>\n<blockquote>\n<p>时间戳为10位(精确到秒)，需*1000；<br>时间戳为13位(精确到毫秒)，无需乘1000。</p>\n</blockquote>\n<p>假设前端同学获取到的时间戳是<code>let time = 1545990082242</code>，<br>然后调用函数<code>toTimeDate(time)</code>，返回当前时间。<br>toTimeDate 函数具体实现方法如下：</p>\n<pre><code>let time = 1545990082242;\nconsole.log(toTimeDate(time)); // 输出 2018-12-28 17:41:22\nfunction toTimeDate(timetamp) {\n  var date = new Date(timetamp); // 输出 date=Fri Dec 28 2018 17:41:22 GMT+0800 (中国标准时间)\n  var year = date.getFullYear(); // 输出年 2018\n  var month = date.getMonth()+1; // 输出月 12\n  var dates = date.getDate(); // 输出日 28\n  var hour = date.getHours(); // 输出时 17\n  var minute = date.getMinutes(); // 输出分 41\n  var second = date.getSeconds(); // 输出秒 22\n  return `${year}-${month}-${dates} ${hour}:${minute}:${second}`;\n}</code></pre><h4 id=\"当前时间-gt-时间戳\"><a href=\"#当前时间-gt-时间戳\" class=\"headerlink\" title=\"当前时间 -&gt; 时间戳\"></a>当前时间 -&gt; 时间戳</h4><p>当前时间(形如’2018-12-28 17:41:22’) -&gt; 时间戳</p>\n<blockquote>\n<p>安卓系统中，<code>-</code>或者<code>/</code>符号都可以；<br>iOS系统，只能识别<code>/</code>符号。</p>\n</blockquote>\n<p>具体实现方法如下：</p>\n<pre><code>var date = new Date(&#39;2018-11-28 17:41:22&#39;); // 输出date= Fri Dec 28 2018 17:41:22 GMT+0800 (中国标准时间)\n// 有三种方案获取时间戳\nvar time1 = date.getTime()； // 方案一：精确到毫秒，输出 1545990082123\nvar time2 = date.valueOf()； // 方案二：精确到毫秒，输出 1545990082123\nvar time3 = Date.parse(date)； // 方案三：精确到秒，输出 1545990082000</code></pre><h4 id=\"国际标准时间-gt-时间戳\"><a href=\"#国际标准时间-gt-时间戳\" class=\"headerlink\" title=\"国际标准时间 -&gt; 时间戳\"></a>国际标准时间 -&gt; 时间戳</h4><p>国际标准时间(形如’2019-03-15T09:15:32.473Z’) -&gt; 时间戳</p>\n<h4 id=\"获取当前时间的前-后一天\"><a href=\"#获取当前时间的前-后一天\" class=\"headerlink\" title=\"获取当前时间的前/后一天\"></a>获取当前时间的前/后一天</h4><p>实现方法如下：</p>\n<pre><code>let curDate = new Date(); // Tue Sep 17 2019 13:55:11 GMT+0800 (中国标准时间)\n// 当前时间的前一天\nlet preDate = new Date(curDate.getTime() - 24 * 60 * 60 * 1000); // Mon Sep 16 2019 13:55:11 GMT+0800 (中国标准时间)\n// 当前时间的后一天\nlet nextDate = new Date(curDate.getTime() + 24 * 60 * 60 * 1000); // Wed Sep 18 2019 13:55:11 GMT+0800 (中国标准时间)</code></pre><h4 id=\"获取具体某月的天数\"><a href=\"#获取具体某月的天数\" class=\"headerlink\" title=\"获取具体某月的天数\"></a>获取具体某月的天数</h4><p>通过Date对象可以获取到具体某月的天数是多少，而且不需要判断年份是否是闰年。<br>实现方法如下：</p>\n<pre><code>let dt = new Date(2015, 2, 0);\nlet monthDate = dt.getDate();\nconsole.log(monthDate); // 28</code></pre><p>其中Date对象里的三个参数一次表示 某年、某月、0。Date对象的月份是从0开始的，也就是说1月份用0表示，所以上述的0就表示为3月份的第0天，但是JS中日期的范围是1～31，所以当日期设为0时，会向前一天，也就是上个月的最后一天。</p>"},{"title":"你不知道的css小知识","abbrlink":"a6497cb5","date":"2019-08-30T08:34:51.000Z","_content":"你不知道的css小知识。\n<!-- more -->\n本文章总结了一些常用或者不常用的css技巧知识，并且将会持续更新。\n\n#### 图片点击穿透\n&nbsp;&nbsp;&nbsp;一张图片覆盖在了另一张图片上，需要穿透上面的图片，实现底层图片的点击事件，可以在上层图片的样式中添加样式`pointer-events: none;`,可以实现这个效果。该css属性在大多数浏览器下都可用，通用性比较强，具体可参考下图（图片来源于[canIuse网站查询](https://www.caniuse.com/#search=pointer-events)）：\n{% img /img/pointer_events_use.jpg \"pointer-events可用浏览器\" %}\n\n#### 英文单词换行\n&nbsp;&nbsp;&nbsp;可以设置文本的样式为`word-break:break-all`，来实现英文单词换行的效果，且不管是什么字符，都是本行放不下就直接换行。该css属性在国内浏览器都可使用，只要浏览器内核版本不是特别低，都是可用的，所以放心大胆的用吧。\n\n#### white-space\nwhite-space包含以下五种属性：\n>* normal：默认属性，合并空白字符和换行符。意思就是看见连续的空格或回车，一律处理成单个空格。\n>* pre：空格字符不合并，并且内容只有在有换行符的地方换行，也就是自动换行的能力消失。\n>* nowrap：和normal一样会合并空白字符，但不允许文本换行。\n>* pre-wrap：空白字符不合并，并且内容会在有换行符的地方换行，也支持自动换行。\n>* pre-line：空白字符合并，内容支持自动换行和手动换行。\n\n#### 不可思议的纯css滚动进度条效果\n利用线性渐变来实现css的滚动条效果，来源于[纯css滚动进度条的实现[作者：chokcoco]](https://juejin.im/post/5c35953ce51d45523f04b6d2)\n\n#### 如何设置文本两端对齐？\n实现效果如下：\n{% img /img/text_align_last.jpg 150 200 %}\n\n具体实现方法可查看：[文本两端对齐](https://codepen.io/cubemmc/pen/yLBPJPr)\n","source":"_posts/css/css-knowledge-list.md","raw":"---\ntitle: 你不知道的css小知识\nabbrlink: a6497cb5\ndate: 2019-08-30 16:34:51\ntags:\n  - css\ncategories: css\n---\n你不知道的css小知识。\n<!-- more -->\n本文章总结了一些常用或者不常用的css技巧知识，并且将会持续更新。\n\n#### 图片点击穿透\n&nbsp;&nbsp;&nbsp;一张图片覆盖在了另一张图片上，需要穿透上面的图片，实现底层图片的点击事件，可以在上层图片的样式中添加样式`pointer-events: none;`,可以实现这个效果。该css属性在大多数浏览器下都可用，通用性比较强，具体可参考下图（图片来源于[canIuse网站查询](https://www.caniuse.com/#search=pointer-events)）：\n{% img /img/pointer_events_use.jpg \"pointer-events可用浏览器\" %}\n\n#### 英文单词换行\n&nbsp;&nbsp;&nbsp;可以设置文本的样式为`word-break:break-all`，来实现英文单词换行的效果，且不管是什么字符，都是本行放不下就直接换行。该css属性在国内浏览器都可使用，只要浏览器内核版本不是特别低，都是可用的，所以放心大胆的用吧。\n\n#### white-space\nwhite-space包含以下五种属性：\n>* normal：默认属性，合并空白字符和换行符。意思就是看见连续的空格或回车，一律处理成单个空格。\n>* pre：空格字符不合并，并且内容只有在有换行符的地方换行，也就是自动换行的能力消失。\n>* nowrap：和normal一样会合并空白字符，但不允许文本换行。\n>* pre-wrap：空白字符不合并，并且内容会在有换行符的地方换行，也支持自动换行。\n>* pre-line：空白字符合并，内容支持自动换行和手动换行。\n\n#### 不可思议的纯css滚动进度条效果\n利用线性渐变来实现css的滚动条效果，来源于[纯css滚动进度条的实现[作者：chokcoco]](https://juejin.im/post/5c35953ce51d45523f04b6d2)\n\n#### 如何设置文本两端对齐？\n实现效果如下：\n{% img /img/text_align_last.jpg 150 200 %}\n\n具体实现方法可查看：[文本两端对齐](https://codepen.io/cubemmc/pen/yLBPJPr)\n","slug":"css/css-knowledge-list","published":1,"updated":"2019-09-17T07:52:59.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0nlxvf9000bryi2e5psfw76","content":"<p>你不知道的css小知识。</p>\n<a id=\"more\"></a>\n<p>本文章总结了一些常用或者不常用的css技巧知识，并且将会持续更新。</p>\n<h4 id=\"图片点击穿透\"><a href=\"#图片点击穿透\" class=\"headerlink\" title=\"图片点击穿透\"></a>图片点击穿透</h4><p>&nbsp;&nbsp;&nbsp;一张图片覆盖在了另一张图片上，需要穿透上面的图片，实现底层图片的点击事件，可以在上层图片的样式中添加样式<code>pointer-events: none;</code>,可以实现这个效果。该css属性在大多数浏览器下都可用，通用性比较强，具体可参考下图（图片来源于<a href=\"https://www.caniuse.com/#search=pointer-events\" target=\"_blank\" rel=\"noopener\">canIuse网站查询</a>）：</p>\n<img src=\"/sugarZ/img/pointer_events_use.jpg\" title=\"pointer-events可用浏览器\">\n\n<h4 id=\"英文单词换行\"><a href=\"#英文单词换行\" class=\"headerlink\" title=\"英文单词换行\"></a>英文单词换行</h4><p>&nbsp;&nbsp;&nbsp;可以设置文本的样式为<code>word-break:break-all</code>，来实现英文单词换行的效果，且不管是什么字符，都是本行放不下就直接换行。该css属性在国内浏览器都可使用，只要浏览器内核版本不是特别低，都是可用的，所以放心大胆的用吧。</p>\n<h4 id=\"white-space\"><a href=\"#white-space\" class=\"headerlink\" title=\"white-space\"></a>white-space</h4><p>white-space包含以下五种属性：</p>\n<blockquote>\n<ul>\n<li>normal：默认属性，合并空白字符和换行符。意思就是看见连续的空格或回车，一律处理成单个空格。</li>\n<li>pre：空格字符不合并，并且内容只有在有换行符的地方换行，也就是自动换行的能力消失。</li>\n<li>nowrap：和normal一样会合并空白字符，但不允许文本换行。</li>\n<li>pre-wrap：空白字符不合并，并且内容会在有换行符的地方换行，也支持自动换行。</li>\n<li>pre-line：空白字符合并，内容支持自动换行和手动换行。</li>\n</ul>\n</blockquote>\n<h4 id=\"不可思议的纯css滚动进度条效果\"><a href=\"#不可思议的纯css滚动进度条效果\" class=\"headerlink\" title=\"不可思议的纯css滚动进度条效果\"></a>不可思议的纯css滚动进度条效果</h4><p>利用线性渐变来实现css的滚动条效果，来源于<a href=\"https://juejin.im/post/5c35953ce51d45523f04b6d2\" target=\"_blank\" rel=\"noopener\">纯css滚动进度条的实现[作者：chokcoco]</a></p>\n<h4 id=\"如何设置文本两端对齐？\"><a href=\"#如何设置文本两端对齐？\" class=\"headerlink\" title=\"如何设置文本两端对齐？\"></a>如何设置文本两端对齐？</h4><p>实现效果如下：</p>\n<img src=\"/sugarZ/img/text_align_last.jpg\" width=\"150\" height=\"200\">\n\n<p>具体实现方法可查看：<a href=\"https://codepen.io/cubemmc/pen/yLBPJPr\" target=\"_blank\" rel=\"noopener\">文本两端对齐</a></p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"excerpt":"<p>你不知道的css小知识。</p>","more":"<p>本文章总结了一些常用或者不常用的css技巧知识，并且将会持续更新。</p>\n<h4 id=\"图片点击穿透\"><a href=\"#图片点击穿透\" class=\"headerlink\" title=\"图片点击穿透\"></a>图片点击穿透</h4><p>&nbsp;&nbsp;&nbsp;一张图片覆盖在了另一张图片上，需要穿透上面的图片，实现底层图片的点击事件，可以在上层图片的样式中添加样式<code>pointer-events: none;</code>,可以实现这个效果。该css属性在大多数浏览器下都可用，通用性比较强，具体可参考下图（图片来源于<a href=\"https://www.caniuse.com/#search=pointer-events\" target=\"_blank\" rel=\"noopener\">canIuse网站查询</a>）：</p>\n<img src=\"/sugarZ/img/pointer_events_use.jpg\" title=\"pointer-events可用浏览器\">\n\n<h4 id=\"英文单词换行\"><a href=\"#英文单词换行\" class=\"headerlink\" title=\"英文单词换行\"></a>英文单词换行</h4><p>&nbsp;&nbsp;&nbsp;可以设置文本的样式为<code>word-break:break-all</code>，来实现英文单词换行的效果，且不管是什么字符，都是本行放不下就直接换行。该css属性在国内浏览器都可使用，只要浏览器内核版本不是特别低，都是可用的，所以放心大胆的用吧。</p>\n<h4 id=\"white-space\"><a href=\"#white-space\" class=\"headerlink\" title=\"white-space\"></a>white-space</h4><p>white-space包含以下五种属性：</p>\n<blockquote>\n<ul>\n<li>normal：默认属性，合并空白字符和换行符。意思就是看见连续的空格或回车，一律处理成单个空格。</li>\n<li>pre：空格字符不合并，并且内容只有在有换行符的地方换行，也就是自动换行的能力消失。</li>\n<li>nowrap：和normal一样会合并空白字符，但不允许文本换行。</li>\n<li>pre-wrap：空白字符不合并，并且内容会在有换行符的地方换行，也支持自动换行。</li>\n<li>pre-line：空白字符合并，内容支持自动换行和手动换行。</li>\n</ul>\n</blockquote>\n<h4 id=\"不可思议的纯css滚动进度条效果\"><a href=\"#不可思议的纯css滚动进度条效果\" class=\"headerlink\" title=\"不可思议的纯css滚动进度条效果\"></a>不可思议的纯css滚动进度条效果</h4><p>利用线性渐变来实现css的滚动条效果，来源于<a href=\"https://juejin.im/post/5c35953ce51d45523f04b6d2\" target=\"_blank\" rel=\"noopener\">纯css滚动进度条的实现[作者：chokcoco]</a></p>\n<h4 id=\"如何设置文本两端对齐？\"><a href=\"#如何设置文本两端对齐？\" class=\"headerlink\" title=\"如何设置文本两端对齐？\"></a>如何设置文本两端对齐？</h4><p>实现效果如下：</p>\n<img src=\"/sugarZ/img/text_align_last.jpg\" width=\"150\" height=\"200\">\n\n<p>具体实现方法可查看：<a href=\"https://codepen.io/cubemmc/pen/yLBPJPr\" target=\"_blank\" rel=\"noopener\">文本两端对齐</a></p>"},{"title":"Regex 正则表达式基础知识总结","abbrlink":"b8a0c513","date":"2019-09-04T16:00:00.000Z","_content":"\n最近在一个项目开发中，被正则表达式折腾的头疼，所以最近忙里偷闲，针对正则的基础语法和常用正则表达式进行了一次总结，避免自己遗忘。\n<!-- more  -->\n{% img /img/1.jpg '图片来源于网络，侵删' %}\n\n#### 什么是正则表达式？\n&nbsp;&nbsp;&nbsp;&nbsp;正则表达式(Regular Expression)是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。正则表达式包含普通字符（例如，```a```到```z```之间的字母）和特殊字符（称为\"元字符\"）,通常被用来检索、替换那些符合某个模式(规则)的文本。\n\n#### 正则表达式的用途是什么？\n正则表达式的用途有两种，一个是搜索字符串，一个是替换字符串。\n\n#### 正则表达式的元字符\n##### 常用的元字符\n\n| 字符 | 描述 |\n|------------|:----------:|\n| ^ | 匹配输入字符串的开始位置。 |\n| $ | 匹配输入字符串的结束位置。 |\n| * | 匹配前面的 子表达式 零次或多次。 |\n| + | 匹配前面的 子表达式 一次或多次。 |\n| ? | 匹配前面的 子表达式 零次或一次。 |\n| {n} | 首先n是一个非负整数>=0，表示前面的字符/字符串 有n个，这是一个确定的值，不是范围！ |\n| {n,} | 首先n是一个非负整数>=0，表示前面的字符/字符串 至少有n个，这是一个范围！ |\n| {n,m} | 首先n和m均为非负整数>=0，且n <= m，表示前面的字符/字符串 至少有n个，至多有m个，这是一个范围！ |\n| x|y | 匹配 x 或 y，x和y为字符/字符串/子表达式。 |\n| [] | 单个字符的集合范围。 |\n| [^xyz] | 匹配未包含的任意字符。例如，[^abc] 可以匹配\"plain\"中的'p'、'l'、'i'、'n'。 |\n| \\b | 匹配一个单词边界，即该元字符代表的位置必须是字符串的边界。 |\n| \\B | 匹配一个非单词边界，同上面的相反。 |\n| \\d | 匹配数字字符，等价于[0-9]。 |\n| \\D | 匹配非数字字符，等价于[^0-9]。 |\n| \\n | 匹配换行符，等价于 \\x0a 和 \\cJ。 |\n| \\r | 匹配回车符，等价于 \\x0d 和 \\cM。 |\n| \\s | 匹配任何空白字符，包括空格、制表符、换页符等等，等价于 [ \\f\\n\\r\\t\\v]。 |\n| \\w | 匹配字母、数字、下划线。等价于 [A-Za-z0-9_]。 |\n\n如果想要了解更多正则表达式的元字符，可自行前往[菜鸟教程](https://www.runoob.com/regexp/regexp-metachar.html)查看。\n\n##### 特殊字符\n特殊字符如果需要单独使用，需要在前面加上转义字符\\。\n需要转义的特殊字符有以下几个：\n```$```、```(```、```)```、```*```、```+```、```.```、```[```、```?```、```\\```、```^```、```{```、```|```。\n\n##### 限定符\n限定符包含：\n```*```、```+```、```?```、```{n}```、```{n,}```、```{n,m}```。\n\n##### 定位符\n定位符包含：\n```^```、```$```、```\\b```、```\\B```。\n\n#### 正则表达式的使用注意事项\n##### 运算符的优先级\n运算符优先级从高到低：\n```\\``` > ```()``` ```[]``` > 限定符 > ```^``` ```$``` ```\\任何元字符``` ```任何字符``` > ```|```\n\n##### 其他注意事项\n暂无\n\n#### 正则表达式在线测试工具\n推荐[菜鸟的正则表达式在线测试工具](https://c.runoob.com/front-end/854)\n\n#### 常用的正则表达式\n1. 中文字符 ```[\\u4e00-\\u9fa5]```\n\n<style>\ntable th:nth-of-type(1){\n  width: 20%;\n}\ntable th:nth-of-type(2){\n  width: 80%;\n}\ntable tr td:nth-of-type(1){\n  text-align: center;\n}\ntable tr td:nth-of-type(2){\n  text-align: left;\n}\n</style>\n","source":"_posts/regex/regex-base.md","raw":"---\ntitle: Regex 正则表达式基础知识总结\nabbrlink: b8a0c513\ndate: 2019-09-05\ntags:\n  - Regex\n  - 语法\ncategories: Regex\n---\n\n最近在一个项目开发中，被正则表达式折腾的头疼，所以最近忙里偷闲，针对正则的基础语法和常用正则表达式进行了一次总结，避免自己遗忘。\n<!-- more  -->\n{% img /img/1.jpg '图片来源于网络，侵删' %}\n\n#### 什么是正则表达式？\n&nbsp;&nbsp;&nbsp;&nbsp;正则表达式(Regular Expression)是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。正则表达式包含普通字符（例如，```a```到```z```之间的字母）和特殊字符（称为\"元字符\"）,通常被用来检索、替换那些符合某个模式(规则)的文本。\n\n#### 正则表达式的用途是什么？\n正则表达式的用途有两种，一个是搜索字符串，一个是替换字符串。\n\n#### 正则表达式的元字符\n##### 常用的元字符\n\n| 字符 | 描述 |\n|------------|:----------:|\n| ^ | 匹配输入字符串的开始位置。 |\n| $ | 匹配输入字符串的结束位置。 |\n| * | 匹配前面的 子表达式 零次或多次。 |\n| + | 匹配前面的 子表达式 一次或多次。 |\n| ? | 匹配前面的 子表达式 零次或一次。 |\n| {n} | 首先n是一个非负整数>=0，表示前面的字符/字符串 有n个，这是一个确定的值，不是范围！ |\n| {n,} | 首先n是一个非负整数>=0，表示前面的字符/字符串 至少有n个，这是一个范围！ |\n| {n,m} | 首先n和m均为非负整数>=0，且n <= m，表示前面的字符/字符串 至少有n个，至多有m个，这是一个范围！ |\n| x|y | 匹配 x 或 y，x和y为字符/字符串/子表达式。 |\n| [] | 单个字符的集合范围。 |\n| [^xyz] | 匹配未包含的任意字符。例如，[^abc] 可以匹配\"plain\"中的'p'、'l'、'i'、'n'。 |\n| \\b | 匹配一个单词边界，即该元字符代表的位置必须是字符串的边界。 |\n| \\B | 匹配一个非单词边界，同上面的相反。 |\n| \\d | 匹配数字字符，等价于[0-9]。 |\n| \\D | 匹配非数字字符，等价于[^0-9]。 |\n| \\n | 匹配换行符，等价于 \\x0a 和 \\cJ。 |\n| \\r | 匹配回车符，等价于 \\x0d 和 \\cM。 |\n| \\s | 匹配任何空白字符，包括空格、制表符、换页符等等，等价于 [ \\f\\n\\r\\t\\v]。 |\n| \\w | 匹配字母、数字、下划线。等价于 [A-Za-z0-9_]。 |\n\n如果想要了解更多正则表达式的元字符，可自行前往[菜鸟教程](https://www.runoob.com/regexp/regexp-metachar.html)查看。\n\n##### 特殊字符\n特殊字符如果需要单独使用，需要在前面加上转义字符\\。\n需要转义的特殊字符有以下几个：\n```$```、```(```、```)```、```*```、```+```、```.```、```[```、```?```、```\\```、```^```、```{```、```|```。\n\n##### 限定符\n限定符包含：\n```*```、```+```、```?```、```{n}```、```{n,}```、```{n,m}```。\n\n##### 定位符\n定位符包含：\n```^```、```$```、```\\b```、```\\B```。\n\n#### 正则表达式的使用注意事项\n##### 运算符的优先级\n运算符优先级从高到低：\n```\\``` > ```()``` ```[]``` > 限定符 > ```^``` ```$``` ```\\任何元字符``` ```任何字符``` > ```|```\n\n##### 其他注意事项\n暂无\n\n#### 正则表达式在线测试工具\n推荐[菜鸟的正则表达式在线测试工具](https://c.runoob.com/front-end/854)\n\n#### 常用的正则表达式\n1. 中文字符 ```[\\u4e00-\\u9fa5]```\n\n<style>\ntable th:nth-of-type(1){\n  width: 20%;\n}\ntable th:nth-of-type(2){\n  width: 80%;\n}\ntable tr td:nth-of-type(1){\n  text-align: center;\n}\ntable tr td:nth-of-type(2){\n  text-align: left;\n}\n</style>\n","slug":"regex/regex-base","published":1,"updated":"2019-09-17T07:56:06.277Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0nlxvfa000eryi2hpb400cn","content":"<p>最近在一个项目开发中，被正则表达式折腾的头疼，所以最近忙里偷闲，针对正则的基础语法和常用正则表达式进行了一次总结，避免自己遗忘。</p>\n<a id=\"more\"></a>\n<img src=\"/sugarZ/img/1.jpg\" title=\"图片来源于网络，侵删\">\n\n<h4 id=\"什么是正则表达式？\"><a href=\"#什么是正则表达式？\" class=\"headerlink\" title=\"什么是正则表达式？\"></a>什么是正则表达式？</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;正则表达式(Regular Expression)是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。正则表达式包含普通字符（例如，<code>a</code>到<code>z</code>之间的字母）和特殊字符（称为”元字符”）,通常被用来检索、替换那些符合某个模式(规则)的文本。</p>\n<h4 id=\"正则表达式的用途是什么？\"><a href=\"#正则表达式的用途是什么？\" class=\"headerlink\" title=\"正则表达式的用途是什么？\"></a>正则表达式的用途是什么？</h4><p>正则表达式的用途有两种，一个是搜索字符串，一个是替换字符串。</p>\n<h4 id=\"正则表达式的元字符\"><a href=\"#正则表达式的元字符\" class=\"headerlink\" title=\"正则表达式的元字符\"></a>正则表达式的元字符</h4><h5 id=\"常用的元字符\"><a href=\"#常用的元字符\" class=\"headerlink\" title=\"常用的元字符\"></a>常用的元字符</h5><table>\n<thead>\n<tr>\n<th>字符</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>^</td>\n<td align=\"center\">匹配输入字符串的开始位置。</td>\n</tr>\n<tr>\n<td>$</td>\n<td align=\"center\">匹配输入字符串的结束位置。</td>\n</tr>\n<tr>\n<td>*</td>\n<td align=\"center\">匹配前面的 子表达式 零次或多次。</td>\n</tr>\n<tr>\n<td>+</td>\n<td align=\"center\">匹配前面的 子表达式 一次或多次。</td>\n</tr>\n<tr>\n<td>?</td>\n<td align=\"center\">匹配前面的 子表达式 零次或一次。</td>\n</tr>\n<tr>\n<td>{n}</td>\n<td align=\"center\">首先n是一个非负整数&gt;=0，表示前面的字符/字符串 有n个，这是一个确定的值，不是范围！</td>\n</tr>\n<tr>\n<td>{n,}</td>\n<td align=\"center\">首先n是一个非负整数&gt;=0，表示前面的字符/字符串 至少有n个，这是一个范围！</td>\n</tr>\n<tr>\n<td>{n,m}</td>\n<td align=\"center\">首先n和m均为非负整数&gt;=0，且n &lt;= m，表示前面的字符/字符串 至少有n个，至多有m个，这是一个范围！</td>\n</tr>\n<tr>\n<td>x</td>\n<td align=\"center\">y</td>\n</tr>\n<tr>\n<td>[]</td>\n<td align=\"center\">单个字符的集合范围。</td>\n</tr>\n<tr>\n<td>[^xyz]</td>\n<td align=\"center\">匹配未包含的任意字符。例如，[^abc] 可以匹配”plain”中的’p’、’l’、’i’、’n’。</td>\n</tr>\n<tr>\n<td>\\b</td>\n<td align=\"center\">匹配一个单词边界，即该元字符代表的位置必须是字符串的边界。</td>\n</tr>\n<tr>\n<td>\\B</td>\n<td align=\"center\">匹配一个非单词边界，同上面的相反。</td>\n</tr>\n<tr>\n<td>\\d</td>\n<td align=\"center\">匹配数字字符，等价于[0-9]。</td>\n</tr>\n<tr>\n<td>\\D</td>\n<td align=\"center\">匹配非数字字符，等价于[^0-9]。</td>\n</tr>\n<tr>\n<td>\\n</td>\n<td align=\"center\">匹配换行符，等价于 \\x0a 和 \\cJ。</td>\n</tr>\n<tr>\n<td>\\r</td>\n<td align=\"center\">匹配回车符，等价于 \\x0d 和 \\cM。</td>\n</tr>\n<tr>\n<td>\\s</td>\n<td align=\"center\">匹配任何空白字符，包括空格、制表符、换页符等等，等价于 [ \\f\\n\\r\\t\\v]。</td>\n</tr>\n<tr>\n<td>\\w</td>\n<td align=\"center\">匹配字母、数字、下划线。等价于 [A-Za-z0-9_]。</td>\n</tr>\n</tbody></table>\n<p>如果想要了解更多正则表达式的元字符，可自行前往<a href=\"https://www.runoob.com/regexp/regexp-metachar.html\" target=\"_blank\" rel=\"noopener\">菜鸟教程</a>查看。</p>\n<h5 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h5><p>特殊字符如果需要单独使用，需要在前面加上转义字符\\。<br>需要转义的特殊字符有以下几个：<br><code>$</code>、<code>(</code>、<code>)</code>、<code>*</code>、<code>+</code>、<code>.</code>、<code>[</code>、<code>?</code>、<code>\\</code>、<code>^</code>、<code>{</code>、<code>|</code>。</p>\n<h5 id=\"限定符\"><a href=\"#限定符\" class=\"headerlink\" title=\"限定符\"></a>限定符</h5><p>限定符包含：<br><code>*</code>、<code>+</code>、<code>?</code>、<code>{n}</code>、<code>{n,}</code>、<code>{n,m}</code>。</p>\n<h5 id=\"定位符\"><a href=\"#定位符\" class=\"headerlink\" title=\"定位符\"></a>定位符</h5><p>定位符包含：<br><code>^</code>、<code>$</code>、<code>\\b</code>、<code>\\B</code>。</p>\n<h4 id=\"正则表达式的使用注意事项\"><a href=\"#正则表达式的使用注意事项\" class=\"headerlink\" title=\"正则表达式的使用注意事项\"></a>正则表达式的使用注意事项</h4><h5 id=\"运算符的优先级\"><a href=\"#运算符的优先级\" class=\"headerlink\" title=\"运算符的优先级\"></a>运算符的优先级</h5><p>运算符优先级从高到低：<br><code>\\</code> &gt; <code>()</code> <code>[]</code> &gt; 限定符 &gt; <code>^</code> <code>$</code> <code>\\任何元字符</code> <code>任何字符</code> &gt; <code>|</code></p>\n<h5 id=\"其他注意事项\"><a href=\"#其他注意事项\" class=\"headerlink\" title=\"其他注意事项\"></a>其他注意事项</h5><p>暂无</p>\n<h4 id=\"正则表达式在线测试工具\"><a href=\"#正则表达式在线测试工具\" class=\"headerlink\" title=\"正则表达式在线测试工具\"></a>正则表达式在线测试工具</h4><p>推荐<a href=\"https://c.runoob.com/front-end/854\" target=\"_blank\" rel=\"noopener\">菜鸟的正则表达式在线测试工具</a></p>\n<h4 id=\"常用的正则表达式\"><a href=\"#常用的正则表达式\" class=\"headerlink\" title=\"常用的正则表达式\"></a>常用的正则表达式</h4><ol>\n<li>中文字符 <code>[\\u4e00-\\u9fa5]</code></li>\n</ol>\n<style>\ntable th:nth-of-type(1){\n  width: 20%;\n}\ntable th:nth-of-type(2){\n  width: 80%;\n}\ntable tr td:nth-of-type(1){\n  text-align: center;\n}\ntable tr td:nth-of-type(2){\n  text-align: left;\n}\n</style>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"excerpt":"<p>最近在一个项目开发中，被正则表达式折腾的头疼，所以最近忙里偷闲，针对正则的基础语法和常用正则表达式进行了一次总结，避免自己遗忘。</p>","more":"<img src=\"/sugarZ/img/1.jpg\" title=\"图片来源于网络，侵删\">\n\n<h4 id=\"什么是正则表达式？\"><a href=\"#什么是正则表达式？\" class=\"headerlink\" title=\"什么是正则表达式？\"></a>什么是正则表达式？</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;正则表达式(Regular Expression)是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。正则表达式包含普通字符（例如，<code>a</code>到<code>z</code>之间的字母）和特殊字符（称为”元字符”）,通常被用来检索、替换那些符合某个模式(规则)的文本。</p>\n<h4 id=\"正则表达式的用途是什么？\"><a href=\"#正则表达式的用途是什么？\" class=\"headerlink\" title=\"正则表达式的用途是什么？\"></a>正则表达式的用途是什么？</h4><p>正则表达式的用途有两种，一个是搜索字符串，一个是替换字符串。</p>\n<h4 id=\"正则表达式的元字符\"><a href=\"#正则表达式的元字符\" class=\"headerlink\" title=\"正则表达式的元字符\"></a>正则表达式的元字符</h4><h5 id=\"常用的元字符\"><a href=\"#常用的元字符\" class=\"headerlink\" title=\"常用的元字符\"></a>常用的元字符</h5><table>\n<thead>\n<tr>\n<th>字符</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>^</td>\n<td align=\"center\">匹配输入字符串的开始位置。</td>\n</tr>\n<tr>\n<td>$</td>\n<td align=\"center\">匹配输入字符串的结束位置。</td>\n</tr>\n<tr>\n<td>*</td>\n<td align=\"center\">匹配前面的 子表达式 零次或多次。</td>\n</tr>\n<tr>\n<td>+</td>\n<td align=\"center\">匹配前面的 子表达式 一次或多次。</td>\n</tr>\n<tr>\n<td>?</td>\n<td align=\"center\">匹配前面的 子表达式 零次或一次。</td>\n</tr>\n<tr>\n<td>{n}</td>\n<td align=\"center\">首先n是一个非负整数&gt;=0，表示前面的字符/字符串 有n个，这是一个确定的值，不是范围！</td>\n</tr>\n<tr>\n<td>{n,}</td>\n<td align=\"center\">首先n是一个非负整数&gt;=0，表示前面的字符/字符串 至少有n个，这是一个范围！</td>\n</tr>\n<tr>\n<td>{n,m}</td>\n<td align=\"center\">首先n和m均为非负整数&gt;=0，且n &lt;= m，表示前面的字符/字符串 至少有n个，至多有m个，这是一个范围！</td>\n</tr>\n<tr>\n<td>x</td>\n<td align=\"center\">y</td>\n</tr>\n<tr>\n<td>[]</td>\n<td align=\"center\">单个字符的集合范围。</td>\n</tr>\n<tr>\n<td>[^xyz]</td>\n<td align=\"center\">匹配未包含的任意字符。例如，[^abc] 可以匹配”plain”中的’p’、’l’、’i’、’n’。</td>\n</tr>\n<tr>\n<td>\\b</td>\n<td align=\"center\">匹配一个单词边界，即该元字符代表的位置必须是字符串的边界。</td>\n</tr>\n<tr>\n<td>\\B</td>\n<td align=\"center\">匹配一个非单词边界，同上面的相反。</td>\n</tr>\n<tr>\n<td>\\d</td>\n<td align=\"center\">匹配数字字符，等价于[0-9]。</td>\n</tr>\n<tr>\n<td>\\D</td>\n<td align=\"center\">匹配非数字字符，等价于[^0-9]。</td>\n</tr>\n<tr>\n<td>\\n</td>\n<td align=\"center\">匹配换行符，等价于 \\x0a 和 \\cJ。</td>\n</tr>\n<tr>\n<td>\\r</td>\n<td align=\"center\">匹配回车符，等价于 \\x0d 和 \\cM。</td>\n</tr>\n<tr>\n<td>\\s</td>\n<td align=\"center\">匹配任何空白字符，包括空格、制表符、换页符等等，等价于 [ \\f\\n\\r\\t\\v]。</td>\n</tr>\n<tr>\n<td>\\w</td>\n<td align=\"center\">匹配字母、数字、下划线。等价于 [A-Za-z0-9_]。</td>\n</tr>\n</tbody></table>\n<p>如果想要了解更多正则表达式的元字符，可自行前往<a href=\"https://www.runoob.com/regexp/regexp-metachar.html\" target=\"_blank\" rel=\"noopener\">菜鸟教程</a>查看。</p>\n<h5 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h5><p>特殊字符如果需要单独使用，需要在前面加上转义字符\\。<br>需要转义的特殊字符有以下几个：<br><code>$</code>、<code>(</code>、<code>)</code>、<code>*</code>、<code>+</code>、<code>.</code>、<code>[</code>、<code>?</code>、<code>\\</code>、<code>^</code>、<code>{</code>、<code>|</code>。</p>\n<h5 id=\"限定符\"><a href=\"#限定符\" class=\"headerlink\" title=\"限定符\"></a>限定符</h5><p>限定符包含：<br><code>*</code>、<code>+</code>、<code>?</code>、<code>{n}</code>、<code>{n,}</code>、<code>{n,m}</code>。</p>\n<h5 id=\"定位符\"><a href=\"#定位符\" class=\"headerlink\" title=\"定位符\"></a>定位符</h5><p>定位符包含：<br><code>^</code>、<code>$</code>、<code>\\b</code>、<code>\\B</code>。</p>\n<h4 id=\"正则表达式的使用注意事项\"><a href=\"#正则表达式的使用注意事项\" class=\"headerlink\" title=\"正则表达式的使用注意事项\"></a>正则表达式的使用注意事项</h4><h5 id=\"运算符的优先级\"><a href=\"#运算符的优先级\" class=\"headerlink\" title=\"运算符的优先级\"></a>运算符的优先级</h5><p>运算符优先级从高到低：<br><code>\\</code> &gt; <code>()</code> <code>[]</code> &gt; 限定符 &gt; <code>^</code> <code>$</code> <code>\\任何元字符</code> <code>任何字符</code> &gt; <code>|</code></p>\n<h5 id=\"其他注意事项\"><a href=\"#其他注意事项\" class=\"headerlink\" title=\"其他注意事项\"></a>其他注意事项</h5><p>暂无</p>\n<h4 id=\"正则表达式在线测试工具\"><a href=\"#正则表达式在线测试工具\" class=\"headerlink\" title=\"正则表达式在线测试工具\"></a>正则表达式在线测试工具</h4><p>推荐<a href=\"https://c.runoob.com/front-end/854\" target=\"_blank\" rel=\"noopener\">菜鸟的正则表达式在线测试工具</a></p>\n<h4 id=\"常用的正则表达式\"><a href=\"#常用的正则表达式\" class=\"headerlink\" title=\"常用的正则表达式\"></a>常用的正则表达式</h4><ol>\n<li>中文字符 <code>[\\u4e00-\\u9fa5]</code></li>\n</ol>\n<style>\ntable th:nth-of-type(1){\n  width: 20%;\n}\ntable th:nth-of-type(2){\n  width: 80%;\n}\ntable tr td:nth-of-type(1){\n  text-align: center;\n}\ntable tr td:nth-of-type(2){\n  text-align: left;\n}\n</style>"},{"title":"git - 基础命令清单","abbrlink":"e930fae2","date":"2019-08-29T16:00:00.000Z","_content":"常用的git基础命令清单总结。\n<!-- more -->\n[参考：阮一峰网络日志](http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html)\n\n#### 新建代码库\n##### 在当前目录新建一个Git代码库\n```git init```\n\n##### 新建一个目录，将其初始化为Git代码库\n```git init [project-name]```\n\n##### 下载一个项目和它的整个代码历史\n```git clone [url]```\n\n#### 提交代码到远程仓库的流程\n##### 添加当前目录的所有文件到暂存区\n```git add .```\n\n##### 提交暂存区到仓库区\n```git commit -m [提交信息]```\n\n##### 拉取远程仓库到本地代码库\n```git pull [远程仓库名] [分支名]```\n\n##### 提交暂存区到远程仓库\n```git push [远程仓库名] [分支名]```\n\n#### 分支\n##### 列出所有本地分支\n```git branch```\n\n##### 列出所有远程分支\n```git branch -r```\n\n##### 列出所有本地分支和远程分支\n```git branch -a```\n\n##### 新建一个分支，但依然停留在当前分支\n```git branch [branch-name]```\n\n##### 新建一个分支，并切换到该分支\n```git checkout -b [branch]```\n\n##### 切换到指定分支，并更新工作区\n```git checkout [branch-name]```\n\n##### 切换到上一个分支\n```git checkout -```\n\n##### 新建一个分支，指向指定commit\n```git branch [branch] [commit]```\n\n##### 新建一个分支，与指定的远程分支建立追踪关系\n```git branch --track [branch] [remote-branch]```\n\n##### 合并指定分支到当前分支\n```git merge [branch]```\n\n##### 选择一个commit，合并进当前分支\n```git cherry-pick [commit]```\n\n##### 删除分支\n```git branch -d [branch-name]```\n\n##### 删除远程分支\n```git push origin --delete [branch-name]```\n```git branch -dr [remote/branch]```\n\n#### 查看信息\n##### 显示有变更的文件\n```git status```\n\n##### 显示当前分支的版本历史\n```git log```\n\n##### 显示过去5次提交\n```git log -5 --pretty --oneline```\n\n##### 显示指定文件是什么人在什么时间修改过\n```git blame [file]```\n\n#### 远程仓库\n##### 显示所有远程仓库\n```git remote -v```\n\n##### 增加一个新的远程仓库，并命名\n```git remote add [远程仓库命名] [远程仓库url]```","source":"_posts/git/git-base.md","raw":"---\ntitle: git - 基础命令清单\nabbrlink: e930fae2\ndate: 2019-08-30\ntags: \n  - git\n  - 语法\ncategories: git\n---\n常用的git基础命令清单总结。\n<!-- more -->\n[参考：阮一峰网络日志](http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html)\n\n#### 新建代码库\n##### 在当前目录新建一个Git代码库\n```git init```\n\n##### 新建一个目录，将其初始化为Git代码库\n```git init [project-name]```\n\n##### 下载一个项目和它的整个代码历史\n```git clone [url]```\n\n#### 提交代码到远程仓库的流程\n##### 添加当前目录的所有文件到暂存区\n```git add .```\n\n##### 提交暂存区到仓库区\n```git commit -m [提交信息]```\n\n##### 拉取远程仓库到本地代码库\n```git pull [远程仓库名] [分支名]```\n\n##### 提交暂存区到远程仓库\n```git push [远程仓库名] [分支名]```\n\n#### 分支\n##### 列出所有本地分支\n```git branch```\n\n##### 列出所有远程分支\n```git branch -r```\n\n##### 列出所有本地分支和远程分支\n```git branch -a```\n\n##### 新建一个分支，但依然停留在当前分支\n```git branch [branch-name]```\n\n##### 新建一个分支，并切换到该分支\n```git checkout -b [branch]```\n\n##### 切换到指定分支，并更新工作区\n```git checkout [branch-name]```\n\n##### 切换到上一个分支\n```git checkout -```\n\n##### 新建一个分支，指向指定commit\n```git branch [branch] [commit]```\n\n##### 新建一个分支，与指定的远程分支建立追踪关系\n```git branch --track [branch] [remote-branch]```\n\n##### 合并指定分支到当前分支\n```git merge [branch]```\n\n##### 选择一个commit，合并进当前分支\n```git cherry-pick [commit]```\n\n##### 删除分支\n```git branch -d [branch-name]```\n\n##### 删除远程分支\n```git push origin --delete [branch-name]```\n```git branch -dr [remote/branch]```\n\n#### 查看信息\n##### 显示有变更的文件\n```git status```\n\n##### 显示当前分支的版本历史\n```git log```\n\n##### 显示过去5次提交\n```git log -5 --pretty --oneline```\n\n##### 显示指定文件是什么人在什么时间修改过\n```git blame [file]```\n\n#### 远程仓库\n##### 显示所有远程仓库\n```git remote -v```\n\n##### 增加一个新的远程仓库，并命名\n```git remote add [远程仓库命名] [远程仓库url]```","slug":"git/git-base","published":1,"updated":"2019-09-17T07:52:59.520Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0nlxvfb000fryi2hms8rypy","content":"<p>常用的git基础命令清单总结。</p>\n<a id=\"more\"></a>\n<p><a href=\"http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html\" target=\"_blank\" rel=\"noopener\">参考：阮一峰网络日志</a></p>\n<h4 id=\"新建代码库\"><a href=\"#新建代码库\" class=\"headerlink\" title=\"新建代码库\"></a>新建代码库</h4><h5 id=\"在当前目录新建一个Git代码库\"><a href=\"#在当前目录新建一个Git代码库\" class=\"headerlink\" title=\"在当前目录新建一个Git代码库\"></a>在当前目录新建一个Git代码库</h5><p><code>git init</code></p>\n<h5 id=\"新建一个目录，将其初始化为Git代码库\"><a href=\"#新建一个目录，将其初始化为Git代码库\" class=\"headerlink\" title=\"新建一个目录，将其初始化为Git代码库\"></a>新建一个目录，将其初始化为Git代码库</h5><p><code>git init [project-name]</code></p>\n<h5 id=\"下载一个项目和它的整个代码历史\"><a href=\"#下载一个项目和它的整个代码历史\" class=\"headerlink\" title=\"下载一个项目和它的整个代码历史\"></a>下载一个项目和它的整个代码历史</h5><p><code>git clone [url]</code></p>\n<h4 id=\"提交代码到远程仓库的流程\"><a href=\"#提交代码到远程仓库的流程\" class=\"headerlink\" title=\"提交代码到远程仓库的流程\"></a>提交代码到远程仓库的流程</h4><h5 id=\"添加当前目录的所有文件到暂存区\"><a href=\"#添加当前目录的所有文件到暂存区\" class=\"headerlink\" title=\"添加当前目录的所有文件到暂存区\"></a>添加当前目录的所有文件到暂存区</h5><p><code>git add .</code></p>\n<h5 id=\"提交暂存区到仓库区\"><a href=\"#提交暂存区到仓库区\" class=\"headerlink\" title=\"提交暂存区到仓库区\"></a>提交暂存区到仓库区</h5><p><code>git commit -m [提交信息]</code></p>\n<h5 id=\"拉取远程仓库到本地代码库\"><a href=\"#拉取远程仓库到本地代码库\" class=\"headerlink\" title=\"拉取远程仓库到本地代码库\"></a>拉取远程仓库到本地代码库</h5><p><code>git pull [远程仓库名] [分支名]</code></p>\n<h5 id=\"提交暂存区到远程仓库\"><a href=\"#提交暂存区到远程仓库\" class=\"headerlink\" title=\"提交暂存区到远程仓库\"></a>提交暂存区到远程仓库</h5><p><code>git push [远程仓库名] [分支名]</code></p>\n<h4 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h4><h5 id=\"列出所有本地分支\"><a href=\"#列出所有本地分支\" class=\"headerlink\" title=\"列出所有本地分支\"></a>列出所有本地分支</h5><p><code>git branch</code></p>\n<h5 id=\"列出所有远程分支\"><a href=\"#列出所有远程分支\" class=\"headerlink\" title=\"列出所有远程分支\"></a>列出所有远程分支</h5><p><code>git branch -r</code></p>\n<h5 id=\"列出所有本地分支和远程分支\"><a href=\"#列出所有本地分支和远程分支\" class=\"headerlink\" title=\"列出所有本地分支和远程分支\"></a>列出所有本地分支和远程分支</h5><p><code>git branch -a</code></p>\n<h5 id=\"新建一个分支，但依然停留在当前分支\"><a href=\"#新建一个分支，但依然停留在当前分支\" class=\"headerlink\" title=\"新建一个分支，但依然停留在当前分支\"></a>新建一个分支，但依然停留在当前分支</h5><p><code>git branch [branch-name]</code></p>\n<h5 id=\"新建一个分支，并切换到该分支\"><a href=\"#新建一个分支，并切换到该分支\" class=\"headerlink\" title=\"新建一个分支，并切换到该分支\"></a>新建一个分支，并切换到该分支</h5><p><code>git checkout -b [branch]</code></p>\n<h5 id=\"切换到指定分支，并更新工作区\"><a href=\"#切换到指定分支，并更新工作区\" class=\"headerlink\" title=\"切换到指定分支，并更新工作区\"></a>切换到指定分支，并更新工作区</h5><p><code>git checkout [branch-name]</code></p>\n<h5 id=\"切换到上一个分支\"><a href=\"#切换到上一个分支\" class=\"headerlink\" title=\"切换到上一个分支\"></a>切换到上一个分支</h5><p><code>git checkout -</code></p>\n<h5 id=\"新建一个分支，指向指定commit\"><a href=\"#新建一个分支，指向指定commit\" class=\"headerlink\" title=\"新建一个分支，指向指定commit\"></a>新建一个分支，指向指定commit</h5><p><code>git branch [branch] [commit]</code></p>\n<h5 id=\"新建一个分支，与指定的远程分支建立追踪关系\"><a href=\"#新建一个分支，与指定的远程分支建立追踪关系\" class=\"headerlink\" title=\"新建一个分支，与指定的远程分支建立追踪关系\"></a>新建一个分支，与指定的远程分支建立追踪关系</h5><p><code>git branch --track [branch] [remote-branch]</code></p>\n<h5 id=\"合并指定分支到当前分支\"><a href=\"#合并指定分支到当前分支\" class=\"headerlink\" title=\"合并指定分支到当前分支\"></a>合并指定分支到当前分支</h5><p><code>git merge [branch]</code></p>\n<h5 id=\"选择一个commit，合并进当前分支\"><a href=\"#选择一个commit，合并进当前分支\" class=\"headerlink\" title=\"选择一个commit，合并进当前分支\"></a>选择一个commit，合并进当前分支</h5><p><code>git cherry-pick [commit]</code></p>\n<h5 id=\"删除分支\"><a href=\"#删除分支\" class=\"headerlink\" title=\"删除分支\"></a>删除分支</h5><p><code>git branch -d [branch-name]</code></p>\n<h5 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h5><p><code>git push origin --delete [branch-name]</code><br><code>git branch -dr [remote/branch]</code></p>\n<h4 id=\"查看信息\"><a href=\"#查看信息\" class=\"headerlink\" title=\"查看信息\"></a>查看信息</h4><h5 id=\"显示有变更的文件\"><a href=\"#显示有变更的文件\" class=\"headerlink\" title=\"显示有变更的文件\"></a>显示有变更的文件</h5><p><code>git status</code></p>\n<h5 id=\"显示当前分支的版本历史\"><a href=\"#显示当前分支的版本历史\" class=\"headerlink\" title=\"显示当前分支的版本历史\"></a>显示当前分支的版本历史</h5><p><code>git log</code></p>\n<h5 id=\"显示过去5次提交\"><a href=\"#显示过去5次提交\" class=\"headerlink\" title=\"显示过去5次提交\"></a>显示过去5次提交</h5><p><code>git log -5 --pretty --oneline</code></p>\n<h5 id=\"显示指定文件是什么人在什么时间修改过\"><a href=\"#显示指定文件是什么人在什么时间修改过\" class=\"headerlink\" title=\"显示指定文件是什么人在什么时间修改过\"></a>显示指定文件是什么人在什么时间修改过</h5><p><code>git blame [file]</code></p>\n<h4 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h4><h5 id=\"显示所有远程仓库\"><a href=\"#显示所有远程仓库\" class=\"headerlink\" title=\"显示所有远程仓库\"></a>显示所有远程仓库</h5><p><code>git remote -v</code></p>\n<h5 id=\"增加一个新的远程仓库，并命名\"><a href=\"#增加一个新的远程仓库，并命名\" class=\"headerlink\" title=\"增加一个新的远程仓库，并命名\"></a>增加一个新的远程仓库，并命名</h5><p><code>git remote add [远程仓库命名] [远程仓库url]</code></p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"excerpt":"<p>常用的git基础命令清单总结。</p>","more":"<p><a href=\"http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html\" target=\"_blank\" rel=\"noopener\">参考：阮一峰网络日志</a></p>\n<h4 id=\"新建代码库\"><a href=\"#新建代码库\" class=\"headerlink\" title=\"新建代码库\"></a>新建代码库</h4><h5 id=\"在当前目录新建一个Git代码库\"><a href=\"#在当前目录新建一个Git代码库\" class=\"headerlink\" title=\"在当前目录新建一个Git代码库\"></a>在当前目录新建一个Git代码库</h5><p><code>git init</code></p>\n<h5 id=\"新建一个目录，将其初始化为Git代码库\"><a href=\"#新建一个目录，将其初始化为Git代码库\" class=\"headerlink\" title=\"新建一个目录，将其初始化为Git代码库\"></a>新建一个目录，将其初始化为Git代码库</h5><p><code>git init [project-name]</code></p>\n<h5 id=\"下载一个项目和它的整个代码历史\"><a href=\"#下载一个项目和它的整个代码历史\" class=\"headerlink\" title=\"下载一个项目和它的整个代码历史\"></a>下载一个项目和它的整个代码历史</h5><p><code>git clone [url]</code></p>\n<h4 id=\"提交代码到远程仓库的流程\"><a href=\"#提交代码到远程仓库的流程\" class=\"headerlink\" title=\"提交代码到远程仓库的流程\"></a>提交代码到远程仓库的流程</h4><h5 id=\"添加当前目录的所有文件到暂存区\"><a href=\"#添加当前目录的所有文件到暂存区\" class=\"headerlink\" title=\"添加当前目录的所有文件到暂存区\"></a>添加当前目录的所有文件到暂存区</h5><p><code>git add .</code></p>\n<h5 id=\"提交暂存区到仓库区\"><a href=\"#提交暂存区到仓库区\" class=\"headerlink\" title=\"提交暂存区到仓库区\"></a>提交暂存区到仓库区</h5><p><code>git commit -m [提交信息]</code></p>\n<h5 id=\"拉取远程仓库到本地代码库\"><a href=\"#拉取远程仓库到本地代码库\" class=\"headerlink\" title=\"拉取远程仓库到本地代码库\"></a>拉取远程仓库到本地代码库</h5><p><code>git pull [远程仓库名] [分支名]</code></p>\n<h5 id=\"提交暂存区到远程仓库\"><a href=\"#提交暂存区到远程仓库\" class=\"headerlink\" title=\"提交暂存区到远程仓库\"></a>提交暂存区到远程仓库</h5><p><code>git push [远程仓库名] [分支名]</code></p>\n<h4 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h4><h5 id=\"列出所有本地分支\"><a href=\"#列出所有本地分支\" class=\"headerlink\" title=\"列出所有本地分支\"></a>列出所有本地分支</h5><p><code>git branch</code></p>\n<h5 id=\"列出所有远程分支\"><a href=\"#列出所有远程分支\" class=\"headerlink\" title=\"列出所有远程分支\"></a>列出所有远程分支</h5><p><code>git branch -r</code></p>\n<h5 id=\"列出所有本地分支和远程分支\"><a href=\"#列出所有本地分支和远程分支\" class=\"headerlink\" title=\"列出所有本地分支和远程分支\"></a>列出所有本地分支和远程分支</h5><p><code>git branch -a</code></p>\n<h5 id=\"新建一个分支，但依然停留在当前分支\"><a href=\"#新建一个分支，但依然停留在当前分支\" class=\"headerlink\" title=\"新建一个分支，但依然停留在当前分支\"></a>新建一个分支，但依然停留在当前分支</h5><p><code>git branch [branch-name]</code></p>\n<h5 id=\"新建一个分支，并切换到该分支\"><a href=\"#新建一个分支，并切换到该分支\" class=\"headerlink\" title=\"新建一个分支，并切换到该分支\"></a>新建一个分支，并切换到该分支</h5><p><code>git checkout -b [branch]</code></p>\n<h5 id=\"切换到指定分支，并更新工作区\"><a href=\"#切换到指定分支，并更新工作区\" class=\"headerlink\" title=\"切换到指定分支，并更新工作区\"></a>切换到指定分支，并更新工作区</h5><p><code>git checkout [branch-name]</code></p>\n<h5 id=\"切换到上一个分支\"><a href=\"#切换到上一个分支\" class=\"headerlink\" title=\"切换到上一个分支\"></a>切换到上一个分支</h5><p><code>git checkout -</code></p>\n<h5 id=\"新建一个分支，指向指定commit\"><a href=\"#新建一个分支，指向指定commit\" class=\"headerlink\" title=\"新建一个分支，指向指定commit\"></a>新建一个分支，指向指定commit</h5><p><code>git branch [branch] [commit]</code></p>\n<h5 id=\"新建一个分支，与指定的远程分支建立追踪关系\"><a href=\"#新建一个分支，与指定的远程分支建立追踪关系\" class=\"headerlink\" title=\"新建一个分支，与指定的远程分支建立追踪关系\"></a>新建一个分支，与指定的远程分支建立追踪关系</h5><p><code>git branch --track [branch] [remote-branch]</code></p>\n<h5 id=\"合并指定分支到当前分支\"><a href=\"#合并指定分支到当前分支\" class=\"headerlink\" title=\"合并指定分支到当前分支\"></a>合并指定分支到当前分支</h5><p><code>git merge [branch]</code></p>\n<h5 id=\"选择一个commit，合并进当前分支\"><a href=\"#选择一个commit，合并进当前分支\" class=\"headerlink\" title=\"选择一个commit，合并进当前分支\"></a>选择一个commit，合并进当前分支</h5><p><code>git cherry-pick [commit]</code></p>\n<h5 id=\"删除分支\"><a href=\"#删除分支\" class=\"headerlink\" title=\"删除分支\"></a>删除分支</h5><p><code>git branch -d [branch-name]</code></p>\n<h5 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h5><p><code>git push origin --delete [branch-name]</code><br><code>git branch -dr [remote/branch]</code></p>\n<h4 id=\"查看信息\"><a href=\"#查看信息\" class=\"headerlink\" title=\"查看信息\"></a>查看信息</h4><h5 id=\"显示有变更的文件\"><a href=\"#显示有变更的文件\" class=\"headerlink\" title=\"显示有变更的文件\"></a>显示有变更的文件</h5><p><code>git status</code></p>\n<h5 id=\"显示当前分支的版本历史\"><a href=\"#显示当前分支的版本历史\" class=\"headerlink\" title=\"显示当前分支的版本历史\"></a>显示当前分支的版本历史</h5><p><code>git log</code></p>\n<h5 id=\"显示过去5次提交\"><a href=\"#显示过去5次提交\" class=\"headerlink\" title=\"显示过去5次提交\"></a>显示过去5次提交</h5><p><code>git log -5 --pretty --oneline</code></p>\n<h5 id=\"显示指定文件是什么人在什么时间修改过\"><a href=\"#显示指定文件是什么人在什么时间修改过\" class=\"headerlink\" title=\"显示指定文件是什么人在什么时间修改过\"></a>显示指定文件是什么人在什么时间修改过</h5><p><code>git blame [file]</code></p>\n<h4 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h4><h5 id=\"显示所有远程仓库\"><a href=\"#显示所有远程仓库\" class=\"headerlink\" title=\"显示所有远程仓库\"></a>显示所有远程仓库</h5><p><code>git remote -v</code></p>\n<h5 id=\"增加一个新的远程仓库，并命名\"><a href=\"#增加一个新的远程仓库，并命名\" class=\"headerlink\" title=\"增加一个新的远程仓库，并命名\"></a>增加一个新的远程仓库，并命名</h5><p><code>git remote add [远程仓库命名] [远程仓库url]</code></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck0nlxvdx0000ryi29v8u34x9","category_id":"ck0nlxve60003ryi2ilprerkf","_id":"ck0nlxvea0007ryi2p4941t1k"},{"post_id":"ck0nlxvf7000aryi2hswzvq1n","category_id":"ck0nlxvfa000cryi2bq25byl6","_id":"ck0nlxvfd000iryi25l1frh62"},{"post_id":"ck0nlxvf9000bryi2e5psfw76","category_id":"ck0nlxvfc000gryi2rzvlmir7","_id":"ck0nlxvfe000nryi2ogoi4in7"},{"post_id":"ck0nlxvfa000eryi2hpb400cn","category_id":"ck0nlxvfd000jryi2u73goo4c","_id":"ck0nlxvff000rryi2o5482hu5"},{"post_id":"ck0nlxvfb000fryi2hms8rypy","category_id":"ck0nlxvfe000oryi29aktuttc","_id":"ck0nlxvfg000vryi239iqqn0i"}],"PostTag":[{"post_id":"ck0nlxvdx0000ryi29v8u34x9","tag_id":"ck0nlxve70004ryi2y47jxrif","_id":"ck0nlxvec0008ryi2n20c0s6q"},{"post_id":"ck0nlxvdx0000ryi29v8u34x9","tag_id":"ck0nlxve90006ryi23socsvrl","_id":"ck0nlxvec0009ryi22fhra5ur"},{"post_id":"ck0nlxvf7000aryi2hswzvq1n","tag_id":"ck0nlxvfa000dryi2gwhhq92y","_id":"ck0nlxvfd000lryi2nowa5cam"},{"post_id":"ck0nlxvf7000aryi2hswzvq1n","tag_id":"ck0nlxvfc000hryi2u8jiqmvg","_id":"ck0nlxvfe000mryi2syzjq6sy"},{"post_id":"ck0nlxvf9000bryi2e5psfw76","tag_id":"ck0nlxvfd000kryi21umv8wfd","_id":"ck0nlxvff000qryi2lzqmomnw"},{"post_id":"ck0nlxvfa000eryi2hpb400cn","tag_id":"ck0nlxvfe000pryi2guxkyaj8","_id":"ck0nlxvff000tryi2tef2k0jj"},{"post_id":"ck0nlxvfa000eryi2hpb400cn","tag_id":"ck0nlxve90006ryi23socsvrl","_id":"ck0nlxvff000uryi23g32r5hf"},{"post_id":"ck0nlxvfb000fryi2hms8rypy","tag_id":"ck0nlxvff000sryi2w4xa5lqj","_id":"ck0nlxvfg000wryi25zimmmtd"},{"post_id":"ck0nlxvfb000fryi2hms8rypy","tag_id":"ck0nlxve90006ryi23socsvrl","_id":"ck0nlxvfg000xryi29678o3xb"}],"Tag":[{"name":"hexo","_id":"ck0nlxve70004ryi2y47jxrif"},{"name":"语法","_id":"ck0nlxve90006ryi23socsvrl"},{"name":"Javascript","_id":"ck0nlxvfa000dryi2gwhhq92y"},{"name":"date","_id":"ck0nlxvfc000hryi2u8jiqmvg"},{"name":"css","_id":"ck0nlxvfd000kryi21umv8wfd"},{"name":"Regex","_id":"ck0nlxvfe000pryi2guxkyaj8"},{"name":"git","_id":"ck0nlxvff000sryi2w4xa5lqj"}]}}